(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    476694,      10304]
NotebookOptionsPosition[    467834,      10159]
NotebookOutlinePosition[    468357,      10178]
CellTagsIndexPosition[    468314,      10175]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Vaje za 3. teden", "Title",
 CellChangeTimes->{{3.8231617505307693`*^9, 3.823161757051238*^9}, 
   3.8231618237866726`*^9, {3.8236744082925386`*^9, 3.823674408573862*^9}, {
   3.82376619779584*^9, 3.823766199454172*^9}, {3.855125646307992*^9, 
   3.855125646694099*^9}},ExpressionUUID->"5c608c4c-fbd4-4970-b68d-\
6b33f9db441c"],

Cell["2. 3. in 3. 3. 2022", "Text",
 CellChangeTimes->{{3.823161833045583*^9, 3.823161882443583*^9}, {
  3.8236744184403744`*^9, 3.823674424761194*^9}, {3.854537658605875*^9, 
  3.854537675061092*^9}, {3.85512565002999*^9, 
  3.855125656446394*^9}},ExpressionUUID->"5192b6bb-7251-4ec2-9b5b-\
ddecd5d5893b"],

Cell["\<\
Naslednje naloge re\[SHacek]i s pomo\[CHacek]jo vnosa z naravnim jezikom \
(brez znanja sintakse Mathematice in brez pomo\[ZHacek]nih ra\[CHacek]unov). \
V vseh primerih se prepri\[CHacek]aj, da je Mathematica razumela tvoj ukaz. \
Glej spodnji primer.\
\>", "Text",
 CellChangeTimes->{{3.824278606060779*^9, 3.8242786895918083`*^9}, {
  3.824278888560747*^9, 3.8242788915809774`*^9}, {3.8242789975121865`*^9, 
  3.82427901034433*^9}},ExpressionUUID->"bd7f36e2-6b14-4e30-b8d6-\
e5450ddb3ecf"],

Cell[CellGroupData[{

Cell["Primer", "Subsection",
 CellChangeTimes->{{3.8242786937992587`*^9, 3.8242787132071357`*^9}, {
  3.8242789028656454`*^9, 
  3.8242789030502114`*^9}},ExpressionUUID->"0b99bd35-4f2a-49eb-8971-\
833816194ada"],

Cell[TextData[{
 "Izra\[CHacek]unaj 20. \[SHacek]tevko v decimalnem zapisu \[SHacek]tevila \
1+1/2+1/3+...+1/100. Celico za\[CHacek]nite z znakom ",
 StyleBox["=", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.824278790003468*^9, 3.8242788561122627`*^9}, {
  3.855126059043696*^9, 3.855126059923355*^9}, {3.855126102012136*^9, 
  3.855126104937644*^9}, {3.8551261477331467`*^9, 
  3.855126157285572*^9}},ExpressionUUID->"6597dbb4-acaf-482a-a5ae-\
2952be4ce6a5"],

Cell[BoxData[
 RowBox[{"(*", " ", "=", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8553043057961435`*^9, 3.8553043091908226`*^9}, {
  3.8553043443926754`*^9, 
  3.8553043452677183`*^9}},ExpressionUUID->"fc1a9714-3c93-41d5-82ce-\
dd42decd1f68"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "please compute the 20th digit of 1+1/2+1/3+...+1/100", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Output", "8"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    SuperscriptBox["20", "\"th\""], 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"20", "\"th\""}]]], 
                    "\" digit\""}, "RowDefault"], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    TagBox[
                    RowBox[{"1", "+", 
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", "3"], "+", "\"\[CenterEllipsis]\"", "+", 
                    FractionBox["1", "100"]}], HoldForm], HoldForm]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Sum", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"8"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["8", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> "Result__Show details"}, {}]}]}],
    Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "NearByDigits", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "NthDigit", "title" -> 
     "Nearby digits"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["\".\"", 
               GrayLevel[0.5], StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], "8", 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["4", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["\"\[Ellipsis]\"", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "NthDigit", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.42", 
    "parsetiming" -> "0.935", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP26391cdgi3i9iic87i2e00002e3ge1165592fe15", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "5", "related" -> 
    "https://www4d.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa26401cdgi3i9iic87i2e0000491c41b5f5259b6c6728076557243023091", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2021, 3, 9, 12, 39, 35.0636592`9.297432130252918}, "Line" -> 1,
     "SessionID" -> 29838564271048567026}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "8"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "please compute the 20th digit of 1+1/2+1/3+...+1/100"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{616., {366., 19.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"3f889d83-4de8-4421-9b2b-5d0e78acc3f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naloga 1", "Section",
 CellChangeTimes->{{3.8231618891351395`*^9, 3.82316190190687*^9}, {
  3.855126326629221*^9, 
  3.85512633282859*^9}},ExpressionUUID->"2ba2c46c-61d3-43a9-803e-\
4fa3d0c38e26"],

Cell["Dolo\[CHacek]i 443. \[SHacek]tevko v decimalnem zapisu \[SHacek]tevila \
pi.", "Text",
 CellChangeTimes->{{3.82367445232017*^9, 3.823674533161069*^9}, {
  3.8242789123164234`*^9, 
  3.8242789266668806`*^9}},ExpressionUUID->"f45d1f7b-b3f0-4518-b297-\
86515d4da031"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{" ", 
   RowBox[{"i", " ", "hate", " ", 
    RowBox[{"english", ":"}]}], ")"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8553044215958896`*^9, 
  3.855304493312685*^9}},ExpressionUUID->"acec563d-fa5d-45b4-bb4d-\
6363fbd6bc03"],

Cell["\<\
Izra\[CHacek]unaj plo\[SHacek]\[CHacek]ino obmo\[CHacek]ja med krivuljama \
f(x)=3x^2+2x+1 in g(x)=4-4x^4.\
\>", "Text",
 CellChangeTimes->{{3.824278934923018*^9, 3.8242789483250437`*^9}, {
  3.8242790294320073`*^9, 3.824279067181547*^9}, {3.8242791289992332`*^9, 
  3.824279136992445*^9}},ExpressionUUID->"9930abba-78cf-458d-bd17-\
19166f4087a6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "\[CapitalCHacek]e", " ", "ne", " ", "dela", " ", "tuki", " ", "poglej", 
   " ", "na", " ", "WolframAlpha"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8553045870512094`*^9, 
  3.855304603824751*^9}},ExpressionUUID->"5c8a373c-a46c-42c7-a32e-\
90e5d0775516"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Area between f(x)=3x^2+2x+1 and g(x)=4-4x^4", Typeset`newq$$ = 
   "Area between f(x)=3x^2+2x+1 and g(x)=4-4x^4", Typeset`chosen$$ = 
   "ResourceFunction[\"AreaBetweenCurves\"][{f[x] == 3*x^2 + 2*x + 1, g[x] == \
4 - 4*x^4}, x]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Area between f(x)=3x^2+2x+1 and g(x)=4-4x^4", 
                  Defer[
                   ResourceFunction[
                   "AreaBetweenCurves"][{$CellContext`f[$CellContext`x] == 
                    3 $CellContext`x^2 + 2 $CellContext`x + 
                    1, $CellContext`g[$CellContext`x] == 
                    4 - 4 $CellContext`x^4}, $CellContext`x]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  InterpretationBox[
                   TagBox[
                    FrameBox[
                    PaneBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.65 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    
                    StyleBox["\<\"AreaBetweenCurves\"\>", 
                    "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->0.9 Inherited,
                    FontColor->GrayLevel[0.1]]}
                    },
                    GridBoxSpacings->{"Columns" -> {{0.25}}}],
                    Alignment->Left,
                    
                    BaseStyle->{
                    LineSpacing -> {0, 0}, LineBreakWithin -> False},
                    BaselinePosition->Baseline,
                    FrameMargins->{{3, 0}, {0, 0}}],
                    Background->RGBColor[0.968627, 0.976471, 0.984314],
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->{},
                    FrameMargins->{{0, 0}, {1, 1}},
                    FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
                    RoundingRadius->4],
                    {"FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "\"AreaBetweenCurves\""},
                    TagBoxNote->"FunctionResourceBox"],
                   ResourceFunction["AreaBetweenCurves"],
                   Selectable->False], "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{
                    RowBox[{"3", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{"4", " ", "-", " ", 
                    RowBox[{"4", "*", 
                    RowBox[{"x", "^", "4"}]}]}]}]}], "}"}], ",", " ", "x"}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  InterpretationBox[
                   TagBox[
                    FrameBox[
                    PaneBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.65 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    
                    StyleBox["\<\"AreaBetweenCurves\"\>", 
                    "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->0.9 Inherited,
                    FontColor->GrayLevel[0.1]]}
                    },
                    GridBoxSpacings->{"Columns" -> {{0.25}}}],
                    Alignment->Left,
                    
                    BaseStyle->{
                    LineSpacing -> {0, 0}, LineBreakWithin -> False},
                    BaselinePosition->Baseline,
                    FrameMargins->{{3, 0}, {0, 0}}],
                    Background->RGBColor[0.968627, 0.976471, 0.984314],
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->{},
                    FrameMargins->{{0, 0}, {1, 1}},
                    FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
                    RoundingRadius->4],
                    {"FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "\"AreaBetweenCurves\""},
                    TagBoxNote->"FunctionResourceBox"],
                   ResourceFunction["AreaBetweenCurves"],
                   Selectable->False], "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{
                    RowBox[{"3", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{"4", " ", "-", " ", 
                    RowBox[{"4", "*", 
                    RowBox[{"x", "^", "4"}]}]}]}]}], "}"}], ",", " ", "x"}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> 
                    RGBColor[0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]], ShowStringCharacters -> False, 
                    FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.65 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"AreaBetweenCurves\"", "ResourceFunctionLabel"], " "}], 
                    ShowAutoStyles -> False, ShowStringCharacters -> False, 
                    FontSize -> 0.9 Inherited, FontColor -> GrayLevel[0.1]]}},
                     GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], Background -> 
                    RGBColor[0.968627, 0.976471, 0.984314], BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, 
                    FrameMargins -> {{0, 0}, {1, 1}}, FrameStyle -> 
                    RGBColor[0.831373, 0.847059, 0.85098], RoundingRadius -> 
                    4], {"FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "\"AreaBetweenCurves\""}, 
                    TagBoxNote -> "FunctionResourceBox"], 
                    ResourceFunction["AreaBetweenCurves"], Selectable -> 
                    False], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{
                    RowBox[{"3", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{"4", " ", "-", " ", 
                    RowBox[{"4", "*", 
                    RowBox[{"x", "^", "4"}]}]}]}]}], "}"}], ",", " ", "x"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Area between f(x)=3x^2+2x+1 and g(x)=4-4x^4", 
                    Defer[
                    ResourceFunction[
                    "AreaBetweenCurves"][{$CellContext`f[$CellContext`x] == 
                    3 $CellContext`x^2 + 2 $CellContext`x + 
                    1, $CellContext`g[$CellContext`x] == 
                    4 - 4 $CellContext`x^4}, $CellContext`x]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    PaneBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.65 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    
                    StyleBox["\<\"AreaBetweenCurves\"\>", 
                    "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->0.9 Inherited,
                    FontColor->GrayLevel[0.1]]}
                    },
                    GridBoxSpacings->{"Columns" -> {{0.25}}}],
                    Alignment->Left,
                    
                    BaseStyle->{
                    LineSpacing -> {0, 0}, LineBreakWithin -> False},
                    BaselinePosition->Baseline,
                    FrameMargins->{{3, 0}, {0, 0}}],
                    Background->RGBColor[0.968627, 0.976471, 0.984314],
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->{},
                    FrameMargins->{{0, 0}, {1, 1}},
                    FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
                    RoundingRadius->4],
                    {"FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "\"AreaBetweenCurves\""},
                    TagBoxNote->"FunctionResourceBox"],
                    ResourceFunction["AreaBetweenCurves"],
                    Selectable->False], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{
                    RowBox[{"3", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{"4", " ", "-", " ", 
                    RowBox[{"4", "*", 
                    RowBox[{"x", "^", "4"}]}]}]}]}], "}"}], ",", " ", "x"}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    PaneBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.65 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    
                    StyleBox["\<\"AreaBetweenCurves\"\>", 
                    "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->0.9 Inherited,
                    FontColor->GrayLevel[0.1]]}
                    },
                    GridBoxSpacings->{"Columns" -> {{0.25}}}],
                    Alignment->Left,
                    
                    BaseStyle->{
                    LineSpacing -> {0, 0}, LineBreakWithin -> False},
                    BaselinePosition->Baseline,
                    FrameMargins->{{3, 0}, {0, 0}}],
                    Background->RGBColor[0.968627, 0.976471, 0.984314],
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->{},
                    FrameMargins->{{0, 0}, {1, 1}},
                    FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
                    RoundingRadius->4],
                    {"FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "\"AreaBetweenCurves\""},
                    TagBoxNote->"FunctionResourceBox"],
                    ResourceFunction["AreaBetweenCurves"],
                    Selectable->False], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{
                    RowBox[{"3", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{"4", " ", "-", " ", 
                    RowBox[{"4", "*", 
                    RowBox[{"x", "^", "4"}]}]}]}]}], "}"}], ",", " ", "x"}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]], ShowStringCharacters -> False, 
                    FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.65 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"AreaBetweenCurves\"", "ResourceFunctionLabel"], " "}], 
                    ShowAutoStyles -> False, ShowStringCharacters -> False, 
                    FontSize -> 0.9 Inherited, FontColor -> GrayLevel[0.1]]}},
                     GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], Background -> 
                    RGBColor[0.968627, 0.976471, 0.984314], BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, 
                    FrameMargins -> {{0, 0}, {1, 1}}, FrameStyle -> 
                    RGBColor[0.831373, 0.847059, 0.85098], RoundingRadius -> 
                    4], {"FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "\"AreaBetweenCurves\""}, 
                    TagBoxNote -> "FunctionResourceBox"], 
                    ResourceFunction["AreaBetweenCurves"], Selectable -> 
                    False], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{
                    RowBox[{"3", "*", 
                    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
                    RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "x", "]"}], " ", "==", " ", 
                    RowBox[{"4", " ", "-", " ", 
                    RowBox[{"4", "*", 
                    RowBox[{"x", "^", "4"}]}]}]}]}], "}"}], ",", " ", "x"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[17]:=",ExpressionUUID->"98504816-31fd-402d-a306-7a8205490174"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["AreaBetweenCurves", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{12., {2., 10.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{12., {2., 10.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  AdjustmentBox[
                   
                   StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["AreaBetweenCurves", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"5.3.0\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/abc37cb4-4b69-4bcd-94ba-ec92af70b0da/"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "AreaBetweenCurves"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["AreaBetweenCurves"],
   Selectable->False], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"]}]}]}], ",", 
     RowBox[{
      RowBox[{"g", "[", "x", "]"}], "\[Equal]", 
      RowBox[{"4", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]}]}]}], "}"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{{3.8553046097833605`*^9, 3.8553046099552345`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"fc71b780-0181-405c-83a7-16df58b4e913"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Nevemo", " ", "to\[CHacek]no", " ", "zakaj", " ", "ne", " ", "dela"}], 
   ",", " ", 
   RowBox[{
   "vrjetno", " ", "ji", " ", "ni", " ", "v\[SHacek]e\[CHacek]", " ", "da", 
    " ", "funkcije", " ", "niso", " ", "impicitno", " ", "podane"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.855304613260144*^9, 
  3.8553046517875586`*^9}},ExpressionUUID->"b32a9d71-726a-46ce-bff4-\
55a8c04098be"],

Cell["Izra\[CHacek]unaj f(3), kjer je f(x)=1+1/x.", "Text",
 CellChangeTimes->{{3.824279221136812*^9, 3.824279248408711*^9}, {
  3.82427946829105*^9, 3.824279470231556*^9}, {3.8242795117979584`*^9, 
  3.8242795119608803`*^9}},ExpressionUUID->"956fddda-adc3-4d90-ad08-\
0bd467b00fa6"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Matej has 512 apples, jana has 1024 apples. how many appless do Matej and \
Jana have togather", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "MathWordProblems", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    TemplateBox[{"\"Matej has \"", "512", "\" apples.\""}, 
                    "RowDefault"], {LineIndent -> 0, 
                    LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {None, None}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> None, -1 -> None}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]]}, {
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    TemplateBox[{"\"Jana has \"", "1024", "\" apples.\""}, 
                    "RowDefault"], {LineIndent -> 0, 
                    LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {None, None}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> None, -1 -> None}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]]}, {
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"How many apples do Jana and Matej have?\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {None, None}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> None, -1 -> None}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> Center, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.3}}}], 
                    "Column"], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> 
     "MathWordProblems", "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  TemplateBox[{"\"Jana and Matej\"", 
                    StyleBox["\" have\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "1536", "\" apples\""}, "RowDefault"], 
                  StyleBox["\".\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Calculations", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "MathWordProblems", "title" -> 
     "Calculation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["\"\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{2}, "Spacer1"], 
              
              TemplateBox[{
               "1024", "\" + \"", "512", "\" \[LongEqual] \"", "1536"}, 
               "RowDefault"]}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "2"}, {
      XMLElement[
      "spellcheck", {
       "word" -> "appless", "suggestion" -> "apples", "text" -> 
        "Interpreting \"appless\" as \"apples\""}, {}], 
      XMLElement[
      "spellcheck", {
       "word" -> "togather", "suggestion" -> "together", "text" -> 
        "Interpreting \"togather\" as \"together\""}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.347", "parsetiming" -> "1.062", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP6491hd73afb90d4190200000d4773g230dib7f8", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "12", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa6501hd73afb90d41902000037i2e15d13a47d7c822558548030476863", "version" -> 
    "2.6", "inputstring" -> 
    "Matej has 512 apples, jana has 1024 apples. how many appless do Matej \
and Jana have togather"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 3, 3, 14, 58, 54.2604192`9.487057986543013}, "Line" -> 
    18, "SessionID" -> 29987815483993185212}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "Matej has 512 apples, jana has 1024 apples. how many appless do Matej and \
Jana have togather"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{457., {53., 19.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[18]:=",ExpressionUUID->"88708fda-2a24-4dcb-aa67-be667cf643c3"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     StyleBox[GridBox[{
        {
         TemplateBox[{
           TemplateBox[{"\"Jana and Matej\"", 
             StyleBox["\" have\"", {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], "\" \"", "1536", "\" apples\""}, 
            "RowDefault"], 
           StyleBox["\".\"", {
             GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
             LineIndent -> 0}]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Matej has 512 apples, jana has 1024 apples. how many appless do Matej and \
Jana have togather", {{"Result", 1}, "Content"}]]], "Output",
 CellChangeTimes->{3.8553047362557344`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3521c278-8710-449e-a7a9-b1489c1857c3"]
}, Open  ]],

Cell["\<\
Izra\[CHacek]unaj obseg elipse s polosema 4 in 3. Ugotovi pribli\[ZHacek]no \
vrednost.\
\>", "Text",
 CellChangeTimes->{{3.824279529171213*^9, 3.824279558645338*^9}, {
  3.824279718775467*^9, 
  3.8242797302444415`*^9}},ExpressionUUID->"983235d9-2199-4320-aa41-\
4140786695b3"],

Cell["\<\
Matej ima 512 jabolk, Jana pa 1024 jabolk. Koliko jabolk imata Matej in Jana \
skupaj?\
\>", "Text",
 CellChangeTimes->{{3.8242797559107485`*^9, 3.8242798054509077`*^9}, {
  3.824279994366373*^9, 
  3.824280011871313*^9}},ExpressionUUID->"526497e1-2595-4dbd-a188-\
6ea12cdef481"],

Cell["\<\
Ali je 1009 pra\[SHacek]tevilo? Izra\[CHacek]unaj vsoto \
1/2+1/3+1/5+1/7+1/11+...+1/1009. Kaj predstavlja ta vsota?\
\>", "Text",
 CellChangeTimes->{{3.824280056484812*^9, 3.8242801036171646`*^9}, {
  3.8242801715842295`*^9, 3.8242801903790665`*^9}, {3.824280231570858*^9, 
  3.824280231771147*^9}},ExpressionUUID->"4263f19c-abbb-4aff-bc8a-\
2438bca4c932"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naloga 2", "Section",
 CellChangeTimes->{{3.8242800245874147`*^9, 3.8242800277175612`*^9}, {
  3.82428030154875*^9, 
  3.824280302737523*^9}},ExpressionUUID->"e0e99eb6-5dc4-427e-9e91-\
f366f683ed3c"],

Cell["Dolo\[CHacek]i povr\[SHacek]ino Slovenije in skupno dol\[ZHacek]no \
njene meje.", "Text",
 CellChangeTimes->{{3.8242805969743814`*^9, 
  3.824280652236888*^9}},ExpressionUUID->"72cbf5bf-0293-4a39-b45b-\
d89408d5eb1d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "oran\[ZHacek]ni", " ", "okvir\[CHacek]ki", " ", "so", " ", "entitete"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.855304773673377*^9, 3.8553047847474566`*^9}, {
  3.8553055584595585`*^9, 
  3.855305559006442*^9}},ExpressionUUID->"25d58482-2088-4068-b0e7-\
277ff84b69bd"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "What is the area of Slovenia?", 
   Typeset`newq$$ = "What is the area of Slovenia?", Typeset`chosen$$ = 
   "Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \"Area\"]]",
    Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "What is the area of Slovenia?", 
                  Defer[
                   Entity["Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "What is the area of Slovenia?", 
                    Defer[
                    Entity["Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[19]:=",ExpressionUUID->"37fdc8a4-7e55-4e2c-837c-d617a4e97fbb"],

Cell[BoxData[
 TemplateBox[{"20273.`", 
   RowBox[{
     SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
   SuperscriptBox["\"Kilometers\"", "2"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.855304758141979*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"08c00d6d-0439-45dc-91c3-b40014f507ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   " What is the total length of the Slovenian border?", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Input", "Quantity[1133., \"Kilometers\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"BoundaryLength\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"full boundary length\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["minput", {}, {"Quantity[1133., \"Kilometers\"]"}], 
       XMLElement["moutput", {}, {"Quantity[1133., \"Kilometers\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TagBox[
                 RowBox[{
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1133", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1133", "SRString" -> "1133"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                ZeroWidthTimes -> False], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["152", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"152", "\[InvisibleSpace]", "\"nd\""}]]]}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Result__Show non-metric"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "BorderingCountries:CountryData", 
     "numsubpods" -> "1", "position" -> "300", "scanner" -> "Data", "title" -> 
     "Bordering countries/regions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"BorderingCountries\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"Austria\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Austria"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Croatia\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Croatia"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Hungary\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Hungary"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Italy\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Italy"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show border lengths", "input" -> 
         "BorderingCountries:CountryData__Show border lengths"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "UnitConversion", "numsubpods" -> "3", 
     "position" -> "400", "scanner" -> "Unit", "title" -> 
     "Unit conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["703.8", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "703.8", "SRString" -> "703.8"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"miles\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"1.133", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "6"]}], 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"1.133", "\[Times]", 
                    SuperscriptBox["10", "6"]}], "SRString" -> 
                    "1.133 times 10 to the 6"], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"meters\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["611.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "611.6", "SRString" -> "611.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"nmi\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"nautical miles\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Helvetica", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsLength", "numsubpods" -> 
     "1", "position" -> "500", "scanner" -> "Unit", "title" -> 
     "Comparison as length"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "7", "\".\"", "3"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"length of the Thirlmere Aqueduct (world's longest \
tunnel)\"", FontFamily -> "Helvetica", FontSize -> Smaller, StripOnInput -> 
                False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["154", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "154", "SRString" -> "154"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Verdana", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "CorrespondingQuantity", "numsubpods" -> 
     "2", "position" -> "600", "scanner" -> "Unit", "title" -> 
     "Corresponding quantities"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in vacuum from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    
                    RowBox[{"x", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "c"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], " in vacuum from ", 
                    $CellContext`InlineForm["t \[LongEqual] x/c"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.8", "SRString" -> "3.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ms\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliseconds\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in an optical fiber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"1.48`", "\[InvisibleSpace]", "x"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "c"}]}], PolynomialForm[#, TraditionalOrder -> False]& ]},
                     "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], 
                    " in an optical fiber ", 
                    $CellContext`InlineForm["t \[LongEqual] 1.48x/c"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.6", "SRString" -> "5.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ms\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliseconds\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "border Slovenian", "score" -> "0.3333333333333333", "level" -> 
        "medium"}, {"\n   ", 
        XMLElement[
        "alternative", {"score" -> "0.20833333333333334", "level" -> "low"}, {
         "country Slovenian"}], "\n   ", 
        XMLElement[
        "alternative", {"score" -> "0.125", "level" -> "low"}, {"length"}], 
        "\n  "}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "4.738", "parsetiming" -> "0.163", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP3481dah2gh415hg8b1e000033b4c39e90f05c96", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> "", 
    "version" -> "2.6", "inputstring" -> "border Slovenian"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 3, 3, 15, 0, 40.4151372`9.359118937524695}, "Line" -> 21,
     "SessionID" -> 29987815483993185212}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Input", "Quantity[1133., \"Kilometers\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   " What is the total length of the Slovenian border?"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{316., {82., 19.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"2d4eebe6-fa5e-4513-8556-c979550cc6f5"],

Cell[BoxData[
 TemplateBox[{"1133.`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8553048404620533`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"335e9a04-d919-4f2a-95c0-36052fa7231f"]
}, Open  ]],

Cell["Koliko Slovenij prekrije povr\[SHacek]ino Antarktike?", "Text",
 CellChangeTimes->{{3.8242806672924557`*^9, 3.8242806783029656`*^9}, {
  3.8242808338637877`*^9, 3.824280836015839*^9}, {3.85512627813202*^9, 
  3.855126280546772*^9}},ExpressionUUID->"b73b474a-3ce6-4aa4-b883-\
67ae18353942"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "ni", " ", "lih", " ", "odgovor", " ", "ki", " ", "smo", " ", "ga", " ", 
    "\[ZHacek]eleli"}], ",", " ", 
   RowBox[{
   "ker", " ", "ne", " ", "razume", " ", "kaj", " ", "\[ZHacek]elimo"}], ",", 
   " ", 
   RowBox[{"vendar", " ", "nam", " ", "vseeno", " ", "nekaj", " ", "da"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8553048924506855`*^9, 
  3.8553049208587065`*^9}},ExpressionUUID->"c07aaea5-544f-43aa-b68b-\
39ad0050a8f1"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   " How many areas of Slovenia cover the area of Antarctica?", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Results", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "{Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"Area\"]], EntityClass[\"Country\", \"Antarctica\"][EntityProperty[\"Country\
\", \"Area\"]]}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                FormBox[
                 TagBox[
                  GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"total area\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   ColumnsEqual -> False, RowsEqual -> False, 
                   GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                   AllowScriptLevelChange -> False], 
                  $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                 TraditionalForm], 
                StyleBox[
                 RowBox[{"\[NoBreak]", 
                   PaneBox[
                   "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                FormBox[
                 TagBox[
                  GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Antarctica\"", 
                    $CellContext`TagBoxWrapper[
                    "EntityClass" -> {CountryData, "Antarctica"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"total area\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   ColumnsEqual -> False, RowsEqual -> False, 
                   GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                   AllowScriptLevelChange -> False], 
                  $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                 TraditionalForm]}], 
              PolynomialForm[#, TraditionalOrder -> False]& ], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Results"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20273", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20273", "SRString" -> "20273"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["157", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"157", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Antarctica\"", 
                    $CellContext`TagBoxWrapper[
                    "EntityClass" -> {CountryData, "Antarctica"}]], Identity],
                     BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.321", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.321", "\[Times]", 
                    SuperscriptBox["10", "7"]}], "SRString" -> 
                    "1.321 times 10 to the 7"], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Result__Show non-metric"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "areas Slovenia cover vs area vs Antarctica", "score" -> "0.6", 
        "level" -> "scorelevel"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "2", "datatypes" -> "Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.935", "parsetiming" -> "0.", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP148216bfa647ihc9c28600001986cf7f2b511a51", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "20", "related" -> "", 
    "version" -> "2.6", "inputstring" -> 
    "How many areas of Slovenia cover the area of Antarctica"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 3, 3, 15, 1, 20.3291089`9.060693276931877}, "Line" -> 22,
     "SessionID" -> 29987815483993185212}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Results", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   " How many areas of Slovenia cover the area of Antarctica?"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{373., {56., 19.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[22]:=",ExpressionUUID->"a8a06d6d-9a44-41f3-86ef-7aced894c3e9"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     StyleBox[GridBox[{
        {
         StyleBox[
          StyleBox[GridBox[{
             {
              PaneBox["\<\"Slovenia\"\>",
               
               BaseStyle->{{
                 BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                 LineSpacing -> {0.9, 0, 1.5}, 
                 LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                 TextAlignment -> Left},
               BaselinePosition->1], 
              StyleBox[
               TemplateBox[{
                 StyleBox[
                  StyleBox[
                   RowBox[{
                    RowBox[{"20273", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit"], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], "\"  \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    SuperscriptBox["157", "\"th\""]}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Verdana", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]},
                "RowDefault"],
               LineIndent->0]},
             {
              PaneBox["\<\"Antarctica\"\>",
               
               BaseStyle->{{
                 BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                 LineSpacing -> {0.9, 0, 1.5}, 
                 LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                 TextAlignment -> Left},
               BaselinePosition->1], 
              StyleBox[
               StyleBox[
                RowBox[{
                 RowBox[{"1.321", 
                  StyleBox["\[Times]",
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  SuperscriptBox["10", "7"]}], "\[NoBreak]", 
                 "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                 StyleBox[
                  SuperscriptBox["\<\"km\"\>", "2"],
                  FontFamily->"Helvetica",
                  FontSize->Smaller], "  ", 
                 StyleBox[
                  
                  RowBox[{"\<\"(\"\>", 
                   "\[NoBreak]", "\<\"square kilometers\"\>", 
                   "\[NoBreak]", "\<\")\"\>"}],
                  LineIndent->0,
                  LinebreakAdjustments->{1, 100, 1, 0, 100},
                  LineColor->GrayLevel[0.6],
                  FrontFaceColor->GrayLevel[0.6],
                  BackFaceColor->GrayLevel[0.6],
                  GraphicsColor->GrayLevel[0.6],
                  FontFamily->"Helvetica",
                  FontSize->Smaller,
                  FontColor->GrayLevel[0.6]]}], "Unit"],
               ZeroWidthTimes->False,
               LineIndent->0,
               LinebreakAdjustments->{1, 100, 1, 0, 100}]}
            },
            AllowScriptLevelChange->False,
            AutoDelete->False,
            BaselinePosition->Automatic,
            FrameStyle->GrayLevel[0.84],
            
            GridBoxAlignment->{
             "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}},
            GridBoxBackground->{"Columns" -> {None, None}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}], 
           "Grid"],
          StripOnInput->False,
          LineSpacing->{0.9, 0, 1.5},
          LineIndent->0]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  " How many areas of Slovenia cover the area of Antarctica?", {{"Result", 1},
     "Content"}]]], "Output",
 CellChangeTimes->{3.855304882735535*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"4bb497eb-5964-4f5c-b61c-0d4e938b364f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Najprej", " ", "Antarctica", " ", "da", " ", "jo", " ", "da", " ", "v", 
   " ", "\[SHacek]tevec"}], "*)"}]], "Input",
 CellChangeTimes->{{3.855305105760298*^9, 
  3.85530512594409*^9}},ExpressionUUID->"f1f59e09-ff97-4b4d-88b6-\
163e68be61ac"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Ratio between the area of Antarctica and the area of Slovenia?", 
   Typeset`newq$$ = 
   "Ratio between the area of Antarctica and the area of Slovenia?", 
   Typeset`chosen$$ = 
   "EntityClass[\"Country\", \"Antarctica\"][EntityProperty[\"Country\", \
\"Area\"]]/Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"Area\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "Ratio between the area of Antarctica and the area of \
Slovenia?", 
               Defer[EntityClass["Country", "Antarctica"][
                  EntityProperty["Country", "Area"]]/Entity[
                "Country", "Slovenia"][
                 EntityProperty["Country", "Area"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Ratio between the area of Antarctica and the area of \
Slovenia?", 
                  Defer[EntityClass["Country", "Antarctica"][
                    EntityProperty["Country", "Area"]]/Entity[
                   "Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{
                   TemplateBox[{"\"Antarctica\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"Antarctica\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"Antarctica\\\"]\"", 
                    "\"countries\""},
                    "EntityClass"], "[", 
                   TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}], "/", 
                  RowBox[{
                   TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{
                   TemplateBox[{"\"Antarctica\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"Antarctica\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"Antarctica\\\"]\"", 
                    "\"countries\""},
                    "EntityClass"], "[", 
                   TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}], "/", 
                  RowBox[{
                   TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Antarctica\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"Antarctica\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"Antarctica\\\"]\"", 
                    "\"countries\""}, "EntityClass"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}]}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "Ratio between the area of Antarctica and the area of \
Slovenia?", 
                   Defer[EntityClass["Country", "Antarctica"][
                    EntityProperty["Country", "Area"]]/Entity[
                    "Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Ratio between the area of Antarctica and the area of \
Slovenia?", 
                    Defer[EntityClass["Country", "Antarctica"][
                    EntityProperty["Country", "Area"]]/Entity[
                    "Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Antarctica\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"Antarctica\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"Antarctica\\\"]\"", 
                    "\"countries\""},
                    "EntityClass"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Antarctica\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"Antarctica\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"Antarctica\\\"]\"", 
                    "\"countries\""},
                    "EntityClass"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Antarctica\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"Antarctica\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"Antarctica\\\"]\"", 
                    "\"countries\""}, "EntityClass"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}]}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[24]:=",ExpressionUUID->"ef160c36-303c-44e1-81eb-5a72f6d31bde"],

Cell[BoxData[
 RowBox[{"{", "651.6055837813841`", "}"}]], "Output",
 CellChangeTimes->{{3.8553050723917923`*^9, 3.855305102261792*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"4de104ea-a74d-4d6a-ac72-25267ea099ad"]
}, Open  ]],

Cell["Kolik\[SHacek]na je temperatura sonca?", "Text",
 CellChangeTimes->{{3.8242811582633038`*^9, 3.8242811937323923`*^9}, {
  3.824281309914006*^9, 
  3.8242813124048896`*^9}},ExpressionUUID->"487958ce-c9c5-4468-8635-\
db4394b748f9"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "What is the tempterature of Sun?", 
   Typeset`newq$$ = "What is the tempterature of Sun?", Typeset`chosen$$ = 
   "Entity[\"Star\", \"Sun\"][EntityProperty[\"Star\", \"EffectiveTemperature\
\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "What is the tempterature of Sun?", 
               Defer[
                Entity["Star", "Sun"][
                 EntityProperty["Star", "EffectiveTemperature"]]], 
               "Fast parse"]; Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{12., {3., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "What is the tempterature of Sun?", 
                  Defer[
                   Entity["Star", "Sun"][
                    EntityProperty["Star", "EffectiveTemperature"]]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Sun\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                    "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"effective temperature\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Star\"", ",", "\"EffectiveTemperature\""}], 
                    "]"}], "\"EntityProperty[\\\"Star\\\", \
\\\"EffectiveTemperature\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Sun\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                    "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"effective temperature\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Star\"", ",", "\"EffectiveTemperature\""}], 
                    "]"}], "\"EntityProperty[\\\"Star\\\", \
\\\"EffectiveTemperature\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Sun\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                    "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""}, 
                    "Entity"], "[", 
                    TemplateBox[{"\"effective temperature\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Star\"", ",", "\"EffectiveTemperature\""}], 
                    "]"}], "\"EntityProperty[\\\"Star\\\", \
\\\"EffectiveTemperature\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "What is the tempterature of Sun?", 
                   Defer[
                    Entity["Star", "Sun"][
                    EntityProperty["Star", "EffectiveTemperature"]]], 
                   "Fast parse"]; Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "What is the tempterature of Sun?", 
                    Defer[
                    Entity["Star", "Sun"][
                    EntityProperty["Star", "EffectiveTemperature"]]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Sun\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                    "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"effective temperature\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Star\"", ",", "\"EffectiveTemperature\""}], 
                    "]"}], "\"EntityProperty[\\\"Star\\\", \
\\\"EffectiveTemperature\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Sun\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                    "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"effective temperature\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Star\"", ",", "\"EffectiveTemperature\""}], 
                    "]"}], "\"EntityProperty[\\\"Star\\\", \
\\\"EffectiveTemperature\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Sun\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                    "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""}, 
                    "Entity"], "[", 
                    TemplateBox[{"\"effective temperature\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Star\"", ",", "\"EffectiveTemperature\""}], 
                    "]"}], "\"EntityProperty[\\\"Star\\\", \
\\\"EffectiveTemperature\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[26]:=",ExpressionUUID->"a9a6a65d-fb9f-4b8a-ade1-edf41f76bd7a"],

Cell[BoxData[
 TemplateBox[{"5772.`4.", "\"K\"", "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.855305149240975*^9, 3.855305157407491*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"337289fd-2942-4d7c-80e4-1fd6d03a9a19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naloga 3", "Section",
 CellChangeTimes->{{3.8236748742147074`*^9, 3.823674881539955*^9}, {
  3.824281335008315*^9, 
  3.8242813351618867`*^9}},ExpressionUUID->"522eec24-e21c-4acc-a5ef-\
fe5403dcf51a"],

Cell["\<\
V tej nalogi si bomo pripravili nabor podatkov in s pomo\[CHacek]jo tega \
nabora naredili primer preproste statisti\[CHacek]ne analize.\
\>", "Text",
 CellChangeTimes->{{3.8242813413445754`*^9, 
  3.8242813832826505`*^9}},ExpressionUUID->"50ffaa19-721a-4675-8edb-\
3f1bb972a80d"],

Cell[CellGroupData[{

Cell["Priprava podatkov", "Subsection",
 CellChangeTimes->{{3.8242830914220295`*^9, 
  3.824283123841911*^9}},ExpressionUUID->"26a06061-9741-4ecf-b5a6-\
13e5759fe696"],

Cell["\<\
Definiraj seznam vseh dr\[ZHacek]av EU. Pomaga\[SHacek] si lahko z naravnim \
jezikom.\
\>", "Text",
 CellChangeTimes->{{3.824281856652864*^9, 3.824281882911785*^9}, {
  3.824281941032139*^9, 
  3.824281947804047*^9}},ExpressionUUID->"52cd3b1c-58e4-4f40-8075-\
701bfe034922"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drzave", "=", 
  NamespaceBox["WolframAlphaQueryParseResults",
   DynamicModuleBox[{Typeset`q$$ = "list of EU countries", Typeset`newq$$ = 
    "list of EU countries", Typeset`chosen$$ = 
    "EntityList[EntityClass[\"Country\", \"EuropeanUnion\"]]", 
    Typeset`open$$ = False}, 
    PaneSelectorBox[{False->
     DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
      WolframAlphaClient`Private`assumptionsQ$$ = False}, 
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            InputFieldBox[Dynamic[Typeset`newq$$], String,
             Appearance->None,
             BaseStyle->{"CalculateInput"},
             ContinuousAction->True,
             Enabled->True,
             FieldSize->{{1, 40}, {1, 
                DirectedInfinity[1]}},
             TrapSelection->False], 
            ItemBox[
             ButtonBox[
              PaneSelectorBox[{True->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "OrangeSquarePlus"],
                  ImageSizeCache->{12., {3., 9.}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ], False->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "GraySquarePlus"],
                  ImageSizeCache->{12., {3., 9.}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
               ImageSize->All],
              Appearance->None,
              ButtonFunction:>(Quiet[
                 WolframAlpha[]]; If[
                 Or[
                  CurrentValue["OptionKey"], 
                  CurrentValue["AltKey"]], SelectionMove[
                   ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                 NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                   Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "list of EU countries", 
                   Defer[
                    EntityList[
                    EntityClass["Country", "EuropeanUnion"]]], "Fast parse"]; 
                 Typeset`open$$ = False]),
              Evaluator->Automatic,
              Method->"Queued"],
             Alignment->{Right, Top},
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 StyleBox[
                  RowBox[{"EntityList", "[", 
                   TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                  StripOnInput->False,
                  NumberMarks->False], True->
                 StyleBox[
                  RowBox[{"EntityList", "[", 
                   TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                  StripOnInput->False,
                  ShowSyntaxStyles->False,
                  NumberMarks->False,
                  FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{ShowStringCharacters -> True},
                 FrameMargins->0,
                 ImageSize->Automatic],
                Alignment->Left,
                Appearance->None,
                BaseStyle->{},
                ButtonFunction:>(SelectionMove[
                   ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                    BoxData[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""}, "EntityClass"], "]"}]], "Input"], All]; 
                 SelectionMove[
                   ButtonNotebook[], After, CellContents]),
                Evaluator->Automatic,
                ImageSize->Automatic,
                Method->"Preemptive"],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                 StandardForm]]],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
               "Tooltip"]& ],
             AppearanceElements->{},
             BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
             ImageSize->{Automatic, {1, 100}},
             Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          FrameStyle->GrayLevel[0.85],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxDividers->{
           "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"],
        Alignment->Top,
        Background->Dynamic[
          FEPrivate`If[
           FEPrivate`And[
            FEPrivate`SameQ[
             FEPrivate`Head[Typeset`newq$$], String], 
            FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
           RGBColor[1., 0.975, 0.95], 
           GrayLevel[1]]],
        BaselinePosition->Baseline,
        FrameStyle->GrayLevel[0.85],
        ImageSize->Automatic,
        RoundingRadius->5,
        StripOnInput->False],
       EventHandlerTag[{
        "MouseEntered" :> 
         FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
         "MouseExited" :> 
         FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
         "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
      DynamicModuleValues:>{}], True->
     TagBox[GridBox[{
        {
         DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
          WolframAlphaClient`Private`assumptionsQ$$ = False}, 
          TagBox[
           FrameBox[
            TagBox[GridBox[{
               {
                InputFieldBox[Dynamic[Typeset`newq$$], String,
                 Appearance->None,
                 BaseStyle->{"CalculateInput"},
                 ContinuousAction->True,
                 Enabled->True,
                 FieldSize->{{1, 40}, {1, 
                    DirectedInfinity[1]}},
                 TrapSelection->False], 
                ItemBox[
                 ButtonBox[
                  PaneSelectorBox[{True->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                   WolframAlphaClient`Private`show$$],
                   ImageSize->All],
                  Appearance->None,
                  ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "list of EU countries", 
                    Defer[
                    EntityList[
                    EntityClass["Country", "EuropeanUnion"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                  Evaluator->Automatic,
                  Method->"Queued"],
                 Alignment->{Right, Top},
                 StripOnInput->False]},
               {
                PaneBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Alignment->Left,
                    Appearance->None,
                    BaseStyle->{},
                    ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""}, "EntityClass"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                    Evaluator->Automatic,
                    ImageSize->Automatic,
                    Method->"Preemptive"],
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                  Annotation[#, 
                   Dynamic[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]],
                    "Tooltip"]& ],
                 AppearanceElements->{},
                 BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                 ImageSize->{Automatic, {1, 100}},
                 Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              BaselinePosition->{1, 1},
              FrameStyle->GrayLevel[0.85],
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            Alignment->Top,
            Background->Dynamic[
              FEPrivate`If[
               FEPrivate`And[
                FEPrivate`SameQ[
                 FEPrivate`Head[Typeset`newq$$], String], 
                FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
               RGBColor[1., 0.975, 0.95], 
               GrayLevel[1]]],
            BaselinePosition->Baseline,
            FrameStyle->GrayLevel[0.85],
            ImageSize->Automatic,
            RoundingRadius->5,
            StripOnInput->False],
           
           EventHandlerTag[{
            "MouseEntered" :> 
             FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
             "MouseExited" :> 
             FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
             "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
             True}]],
          DynamicModuleValues:>{}]},
        {
         InterpretationBox[
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEExpressions", "NecklaceAnimator"][20]],
           AnimatorBoxOptions->{ImageSize->20}],
          Animator[Appearance -> "Necklace", ImageSize -> 20],
          BaseStyle->{"Deploy"}]}
       },
       BaselinePosition->{1, 1},
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}, Dynamic[
      TrueQ[Typeset`open$$]],
     BaseStyle->{Deployed -> True},
     ImageSize->Automatic],
    DynamicModuleValues:>{}],
   BaseStyle->{Deployed -> True},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True]}]], "WolframAlphaShortInput",
 CellChangeTimes->{{3.855305278362443*^9, 3.8553052849954095`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8ed25811-9d1b-4ade-bdf1-c6d5ec4dff2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Austria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belgium\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bulgaria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Croatia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyprus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Czech Republic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Denmark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Estonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Finland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"France\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greece\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hungary\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ireland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Italy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Latvia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lithuania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Luxembourg\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Netherlands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portugal\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Romania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovakia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sweden\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8553052361912985`*^9, 3.855305292248288*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"7ee2ea8f-5e41-456c-a843-e15d31810bcf"]
}, Open  ]],

Cell["\<\
Kolik\[SHacek]na je dol\[ZHacek]ina seznama (tj. \[SHacek]tevilo \
dr\[ZHacek]av Evropske unije)?\
\>", "Text",
 CellChangeTimes->{{3.8242819978763757`*^9, 
  3.824282036670769*^9}},ExpressionUUID->"1290e2b5-96b2-4cab-acad-\
87409ae820b2"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "How many countries are in the EU?", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Output", "27"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
              "\"number of member states in the European Union\"", Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"27"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{"27"}, {
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", 
                    "\"27 member states, with 5 candidates for membership\"", 
                    "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Verdana", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "How many countries are in the EU", 
        "template" -> 
        "Assuming \"How many countries are in the EU\" is a \
quantity${separator}Use as ${desc} instead", "count" -> "2", "pulldown" -> 
        "false", "default" -> 
        "{\"C\", \"How many countries are in the EU\"} -> {\"Miscellaneous\", \
\"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Miscellaneous", "desc" -> "a quantity", "input" -> 
          "{\"C\", \"How many countries are in the EU\"} -> \
{\"Miscellaneous\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "CountryClass", "desc" -> "a class of countries", "input" -> 
          "{\"C\", \"How many countries are in the EU\"} -> \
{\"CountryClass\"}"}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "2", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.9400000000000001", "parsetiming" -> "0.716", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP15621260926b56c8ecce00001051h0215fh7ga40", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "1", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa15631260926b56c8ecce00003c3h5g1e07db7f447794153569472399936", "version" -> 
    "2.6", "inputstring" -> "How many countries are in the EU"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 3, 3, 15, 9, 3.6140338`8.310567190930234}, "Line" -> 30, 
    "SessionID" -> 29987815483993185212}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "27"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "How many countries are in the EU?"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{273., {53., 19.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[30]:=",ExpressionUUID->"e5f17a13-05e2-4264-b7cf-937298f8d171"],

Cell[BoxData["27"], "Output",
 CellChangeTimes->{3.8553053436296587`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"cc7be722-d6d7-47a1-976e-86bd1cc0d971"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "drzave", "]"}]], "Input",
 CellChangeTimes->{{3.8553053021704297`*^9, 3.8553053173688393`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"7a50b412-324d-4609-bf80-bc04527f5f2b"],

Cell[BoxData["27"], "Output",
 CellChangeTimes->{3.855305318306345*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"29f51da8-502b-4b16-9cd7-6ad7fb051932"]
}, Open  ]],

Cell[TextData[{
 "Poi\[SHacek]\[CHacek]i \[SHacek]tevilo vseh lastnosti, ki jih imajo dr\
\[ZHacek]ave s tega seznama. Nasvet: ukaz ",
 ButtonBox["EntityProperties",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EntityProperties"],
 ". V pomo\[CHacek] vam bo tudi dokumentacija ",
 ButtonBox["EntityProperty",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EntityProperty"],
 "."
}], "Text",
 CellChangeTimes->{{3.82428205207804*^9, 3.824282140880015*^9}, {
  3.8552000891039677`*^9, 
  3.855200130099024*^9}},ExpressionUUID->"6cd44166-c96b-4bd6-8a65-\
26aef9c5588e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityProperties", "[", 
  RowBox[{"First", "[", "drzave", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.8553054823826447`*^9, {3.85530661446189*^9, 3.855306622397664*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5b07215d-050b-4480-ad3f-c02cbcb0682c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"adjusted net national income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdjustedNetNationalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdjustedNetNationalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"seasonal bank borrowings from Fed, plus adjustments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdjustmentSeasonalBorrowings\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AdjustmentSeasonalBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"regions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdministrativeDivisions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdministrativeDivisions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"adult population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdultPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdultPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"obese adults\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdultsObese\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdultsObese\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of aggravated assaults\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggravatedAssault\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggravatedAssault\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of aggravated assault\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggravatedAssaultRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggravatedAssaultRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 15 to 24 years\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue15To24\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue15To24\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 25 to 34 years\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue25To34\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue25To34\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 35 to 64 years\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue35To64\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue35To64\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 65 years and over\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue65\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue65\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate household income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHouseholdIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHouseholdIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate weekly hours index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateWeeklyHoursIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateWeeklyHoursIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural irrigated land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalIrrigatedLandFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalIrrigatedLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgriculturalLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural production index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalProductionIndex\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"AgriculturalProductionIndex\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural production per capita index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"AgriculturalProductionPerCapitaIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalProductionPerCapitaIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural products\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalProducts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgriculturalProducts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureConsumption\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumption per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureConsumptionPerCapita\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureConsumptionPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"harvest area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureHarvestArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureHarvestArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"harvest area per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureHarvestAreaPerCapita\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureHarvestAreaPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"production per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureProductionPerCapita\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureProductionPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average yield\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureYield\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureYield\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"yield per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureYieldPerCapita\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureYieldPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by air\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AirArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AirArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aircraft carriers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AircraftCarriers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AircraftCarriers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"air force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AirForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AirForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"airports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Airports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Airports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"air transport\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AirTransport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AirTransport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alcohol fuel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Alcohol\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Alcohol\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total primary energy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AllPrimaryFuels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AllPrimaryFuels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alternate names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AlternateNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AlternateNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"AM radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AMRadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AMRadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual annulments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualAnnulments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualAnnulments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual births\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualBirths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualBirths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual deaths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualDeaths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualDeaths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual divorces\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualDivorces\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualDivorces\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual HIV/AIDS deaths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualHIVAIDSDeaths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualHIVAIDSDeaths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual marriages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualMarriages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualMarriages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"antenatal care coverage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AntenatalCareCoverage\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AntenatalCareCoverage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual\[Hyphen]crop land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArableLandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ArableLandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual\[Hyphen]crop land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArableLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ArableLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"armored infantry fighting vehicles\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArmoredInfantryFightingVehicles\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ArmoredInfantryFightingVehicles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"armored personnel carriers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArmoredPersonnelCarriers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ArmoredPersonnelCarriers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"army\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Army\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Army\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"artillery\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Artillery\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Artillery\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"attack helicopters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AttackHelicopters\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AttackHelicopters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"automobile production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AutomobileProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AutomobileProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average hourly earnings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageHourlyEarnings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageHourlyEarnings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average length of stay\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageLengthOfStay\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageLengthOfStay\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average number of meetings with tax officials\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average time to clear exports through customs\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"AverageTimeToClearExportsThroughCustoms\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AverageTimeToClearExportsThroughCustoms\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average weekly hours\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageWeeklyHours\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageWeeklyHours\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average weekly overtime hours\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageWeeklyOvertimeHours\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"AverageWeeklyOvertimeHours\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aviation gasoline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AviationGasoline\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AviationGasoline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bankers acceptance rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BankersAcceptance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BankersAcceptance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bank prime loan rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BankPrimeLoanRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BankPrimeLoanRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bank prime loan rate changes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BankPrimeLoanRateChanges\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BankPrimeLoanRateChanges\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"benefits cost index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BenefitsCostIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BenefitsCostIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"birth rate fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BirthRateFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BirthRateFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"births attended by skilled health personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"BirthsAttendedBySkilledHealthPersonnel\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BirthsAttendedBySkilledHealthPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"births by caesarean section\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BirthsByCaesareanSection\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BirthsByCaesareanSection\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"book titles published\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BookTitles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BookTitles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bordering countries/regions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BorderingCountries\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BorderingCountries\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"shared border lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BordersLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BordersLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full boundary length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BoundaryLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BoundaryLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"burden of customs procedure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BurdenOfCustomsProcedure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BurdenOfCustomsProcedure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of burglaries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Burglary\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Burglary\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of burglary\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BurglaryRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BurglaryRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"business activity index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessActivityIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BusinessActivityIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"professional arrivals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BusinessArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"business entry rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessEntryRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BusinessEntryRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"business extent of disclosure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessExtentOfDisclosureIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BusinessExtentOfDisclosureIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"calling code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CallingCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CallingCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"capacity utilization rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CapacityUtilization\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CapacityUtilization\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"capital city\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CapitalCity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CapitalCity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"capital location\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CapitalLocation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CapitalLocation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"S&P/Case\[Hyphen]Shiller home price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CaseShillerIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CaseShillerIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"central bank intervention\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CentralBankIntervention\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CentralBankIntervention\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"certificate of deposit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CertificateOfDeposit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CertificateOfDeposit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"changes in inventories\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChangesInInventories\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChangesInInventories\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"checkable deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CheckableDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CheckableDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"chemicals fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChemicalsFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChemicalsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"child employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildEmploymentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildEmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"child population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vitamin A supplementation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ChildrenAged6To59MonthsReceivedVitaminA\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenAged6To59MonthsReceivedVitaminA\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"children not enrolled in schools\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenOutOfSchool\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildrenOutOfSchool\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"overweight children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveOverweight\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"ChildrenUnderFiveOverweight\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"antimalarial treatment for fever\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"ChildrenUnderFiveReceivedAntimalarialTreatment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveReceivedAntimalarialTreatment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"stunted children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveStunted\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildrenUnderFiveStunted\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"underweight children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveUnderweight\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveUnderweight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"children with ARI symptoms taken to facility\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveWithARISymptoms\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithARISymptoms\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"diarrheal treatment with ORT\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ChildrenUnderFiveWithDiarrheaReceivingORT\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithDiarrheaReceivingORT\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"children sleeping under insecticide-treated nets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ChildrenUnderFiveWithInsecticideNets\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithInsecticideNets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cinema attendance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CinemaAttendance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CinemaAttendance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of cinemas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Cinemas\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Cinemas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cinema seats\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CinemaSeats\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CinemaSeats\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian employment population ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianEmploymentPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CivilianEmploymentPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian labor force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianLaborForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CivilianLaborForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian participation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianParticipationRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CivilianParticipationRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian unemployment rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianUnemploymentRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CivilianUnemploymentRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Classes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Classes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"climate types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ClimateTypes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ClimateTypes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lignite brown coal\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoalLigniteBrown\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoalLigniteBrown\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coal\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoalTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoalTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coal\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoalTotalShortTons\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoalTotalShortTons\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coast guard\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoastGuard\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoastGuard\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coastline length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoastlineLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoastlineLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial banks assets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialBanksAssets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CommercialBanksAssets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial banks credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialBanksCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CommercialBanksCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial paper\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialPaper\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CommercialPaper\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial paper of nonfinancial companies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialPaperNonFinancial\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"CommercialPaperNonFinancial\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"community and traditional health workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"CommunityAndTraditionalHealthWorkers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CommunityAndTraditionalHealthWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"community and traditional health workers per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"CommunityAndTraditionalHealthWorkersPopulationRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"CommunityAndTraditionalHealthWorkersPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"compensation per hour index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CompensationPerHourIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CompensationPerHourIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school completion rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CompletionRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CompletionRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"prevalence of condom use by young people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CondomUseByYoungPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CondomUseByYoungPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"construction value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConstructionValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConstructionValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConsumerCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConsumerCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConsumerPriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConsumerPriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer sentiment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConsumerSentiment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConsumerSentiment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"container port traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContainerPortTraffic\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ContainerPortTraffic\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"continent\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Continent\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Continent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"contraceptive prevalence\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContraceptivePrevalence\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ContraceptivePrevalence\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"contributing family workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContributingFamilyWorkers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ContributingFamilyWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"contributing family workers fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContributingFamilyWorkersFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ContributingFamilyWorkersFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"conventional mortgage rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConventionalMortgageRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConventionalMortgageRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate bond yield\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateBondYield\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateBondYield\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate capital consumption adjustment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"CorporateCapitalConsumptionAdjustment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateCapitalConsumptionAdjustment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate cash flow\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateCashFlow\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateCashFlow\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate dividends\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateDividends\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateDividends\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate inventory valuation adjustment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"CorporateInventoryValuationAdjustment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateInventoryValuationAdjustment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate profits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateProfits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateProfits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate proprietors income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateProprietorsIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateProprietorsIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical cost of business start up procedures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CostOfBusinessStartUpProcedures\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CostOfBusinessStartUpProcedures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical cost to export one container\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CostToExport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CostToExport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical cost to import one container\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CostToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CostToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"country code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CountryCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CountryCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CPI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CPI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"CPIA rating\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Cpia\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Cpia\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"credit depth of information\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CreditDepthOfInformationIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CreditDepthOfInformationIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total rate of crime\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CrimeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CrimeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total number of crimes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CrimeTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CrimeTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"perennial-crop land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CropsLandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CropsLandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"perennial-crop land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CropsLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CropsLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency in circulation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyInCirculation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyInCirculation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency short name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyShortName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyShortName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency unit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyUnit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyUnit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current account\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrentAccount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrentAccount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current account balance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrentAccountBalance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrentAccountBalance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current expenditure on health\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrentExpenditureOnHealth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"CurrentExpenditureOnHealth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average daily hotel stays\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DailyAverageHotels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DailyAverageHotels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"daily newspaper circulation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DailyNewspapers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DailyNewspapers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"death rate fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DeathRateFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DeathRateFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"debt measure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DebtMeasure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DebtMeasure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"DEC alternative conversion factor\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DecAlternativeConversionFactor\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DecAlternativeConversionFactor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"demand deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DemandDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DemandDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dentistry personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DentistryPersonnel\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DentistryPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dentistry personnel per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DentistryPersonnelPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DentistryPersonnelPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dependencies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Dependencies\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Dependencies\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dependency parent\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DependencyParent\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DependencyParent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"deposit interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DepositInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DepositInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"deposits with Federal Reserve banks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DepositsWithFederalReserveBanks\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DepositsWithFederalReserveBanks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"destroyers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Destroyers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Destroyers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discount rate changes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DiscountRateChanges\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DiscountRateChanges\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discount window borrowing\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DiscountWindowBorrowing\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DiscountWindowBorrowing\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discrepancy in expenditure estimate of GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"DiscrepancyInExpenditureEstimateOfGDP\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DiscrepancyInExpenditureEstimateOfGDP\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"disposable personal income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DisposablePersonalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DisposablePersonalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical documents required per export shipment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DocumentsToExport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DocumentsToExport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical documents required per import shipment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DocumentsToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DocumentsToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"improved drinking water sources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DrinkingWater\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DrinkingWater\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DryNaturalGas\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DryNaturalGas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DryNaturalGasCubicFeet\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DryNaturalGasCubicFeet\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ease of doing business\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EaseOfDoingBusinessIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EaseOfDoingBusinessIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"economic aid\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EconomicAid\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EconomicAid\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"economically active children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EconomicallyActiveChildrenFraction\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"EconomicallyActiveChildrenFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total school duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EducationDuration\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EducationDuration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"effective federal funds rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EffectiveFederalFundsRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EffectiveFederalFundsRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"elderly population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElderlyPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElderlyPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid frequency\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridFrequency\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridFrequency\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid plug images\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridPlugImages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridPlugImages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid plug codes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridPlugs\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridPlugs\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid socket images\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridSocketImages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricalGridSocketImages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid socket codes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridSockets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridSockets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid voltages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridVoltages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridVoltages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from biomass\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityBiomass\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityBiomass\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from fossil fuels\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityConventionalThermal\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricityConventionalThermal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"geothermal electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityGeothermal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityGeothermal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hydroelectric electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityHydroelectric\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityHydroelectric\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pumped\[Hyphen]storage hydroelectricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityHydroPumpedStorage\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricityHydroPumpedStorage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nuclear electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityNuclear\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityNuclear\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from solar, tide, or waves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricitySolarTideWave\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricitySolarTideWave\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from renewables\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityTotalRenewables\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricityTotalRenewables\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from wind\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityWind\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityWind\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"falling water resources for electric power\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricPowerFallingWaterResources\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricPowerFallingWaterResources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"emigration rate of tertiary educated\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmigrationRateOfTertiaryEducated\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"EmigrationRateOfTertiaryEducated\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employees compensation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmployeesCompensation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmployeesCompensation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"self\[Hyphen]employed with employees\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Employers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Employers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employers fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmployersFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmployersFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Employment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Employment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment cost index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmploymentCostIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmploymentCostIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmploymentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment to population ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmploymentToPopulationRatio\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"EmploymentToPopulationRatio\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school ending age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EndingAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EndingAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EntityClasses\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EntityClasses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"environmental agreements\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EnvironmentalAgreements\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EnvironmentalAgreements\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"environmental issues\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EnvironmentalIssues\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EnvironmentalIssues\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ethnic groups\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EthnicGroups\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EthnicGroups\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ethnic mix\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EthnicGroupsFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EthnicGroupsFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"exchange rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExchangeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExchangeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on ancillary services\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnAncillaryServices\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnAncillaryServices\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on day care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnDayCare\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnDayCare\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"health spending\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnHealth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnHealth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on home health care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnHomeHealthCare\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnHomeHealthCare\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on in-patient care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnInpatientCare\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnInpatientCare\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on medical services\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnMedicalServices\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnMedicalServices\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on out-patient care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnOutpatientCare\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnOutpatientCare\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on over-the-counter medicines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ExpenditureOnOverthecounterMedicines\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnOverthecounterMedicines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on prescription medicines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnPrescriptionMedicines\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnPrescriptionMedicines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure per student\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditurePerStudent\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditurePerStudent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure per student fraction of GDP per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditurePerStudentFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditurePerStudentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export commodities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportCommodities\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportCommodities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export partners\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportPartners\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportPartners\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export partners fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportPartnersFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportPartnersFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"exports as a capacity to import\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportsAsACapacityToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ExportsAsACapacityToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportsValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportsValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"extended credit borrowings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExtendedCreditBorrowings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExtendedCreditBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"external balance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExternalBalance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExternalBalance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"external debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExternalDebt\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExternalDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"factors affecting reserve balances of depository institutions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"FactorsAffectingReserveBalancesOfDepositoryInstitutions\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FactorsAffectingReserveBalancesOfDepositoryInstitutions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDebt\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal deficit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDeficit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalDeficit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal demand deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDemandDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalDemandDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal demand deposits and note balances\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDemandDepositsNoteBalances\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FederalDemandDepositsNoteBalances\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal note balances\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalNoteBalances\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalNoteBalances\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Federal Reserve bank discount rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalReserveBankDiscountRate\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FederalReserveBankDiscountRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal surplus\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalSurplus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalSurplus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female adult population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleAdultPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleAdultPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female child population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleChildPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleChildPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female elderly population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleElderlyPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleElderlyPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female infant mortality fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleInfantMortalityFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FemaleInfantMortalityFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleLifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleLifeExpectancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female median age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleMedianAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleMedianAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemalePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemalePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fertilizer consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FertilizerConsumption\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FertilizerConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fertilizer production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FertilizerProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FertilizerProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FHA mortgage rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FHAMortgageRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FHAMortgageRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fighters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Fighters\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Fighters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ground\[Hyphen]attack fighters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FightersGroundAttack\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FightersGroundAttack\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"final consumption expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FinalConsumptionExpenditure\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"FinalConsumptionExpenditure\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"final sales of domestic product\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FinalSalesOfDomesticProduct\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"FinalSalesOfDomesticProduct\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"final sales to domestic purchasers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FinalSalesToDomesticPurchasers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FinalSalesToDomesticPurchasers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms formally registered when operations started\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"FirmsFormallyRegisteredWhenOperationsStarted\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"FirmsFormallyRegisteredWhenOperationsStarted\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms offering formal training\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FirmsOfferingFormalTraining\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"FirmsOfferingFormalTraining\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms using banks to finance investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FirmsUsingBanksToFinanceInvestment\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FirmsUsingBanksToFinanceInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms with female participation in ownership\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"FirmsWithFemaleParticipationInOwnership\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FirmsWithFemaleParticipationInOwnership\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fiscal year date\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FiscalYearDate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FiscalYearDate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fish production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FishProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FishProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fixed broadband internet subscribers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FixedBroadbandInternetSubscribers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FixedBroadbandInternetSubscribers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fixed capital consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FixedCapitalConsumption\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FixedCapitalConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flag\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Flag\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Flag\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flag description\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FlagDescription\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FlagDescription\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flag image\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FlagImage\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FlagImage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flexible seasonal credit rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FlexibleSeasonalCreditRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"FlexibleSeasonalCreditRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FM radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FMRadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FMRadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"food, beverages and tobacco fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FoodBeveragesTobaccoFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FoodBeveragesTobaccoFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food production index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FoodProductionIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FoodProductionIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food production per capita index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FoodProductionPerCapitaIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FoodProductionPerCapitaIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of rapes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForcibleRape\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForcibleRape\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of rape\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForcibleRapeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForcibleRapeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foreign exchange reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignExchangeReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignExchangeReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"change in foreign owned assets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignOwnedAssets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignOwnedAssets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foreign owned ships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignOwnedShips\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignOwnedShips\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foreign registered ships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignRegisteredShips\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignRegisteredShips\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"forest and woodland area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForestWoodlandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForestWoodlandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"freshwater withdrawals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FreshwaterWithdrawals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FreshwaterWithdrawals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"freshwater withdrawals fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FreshwaterWithdrawalsFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FreshwaterWithdrawalsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"frigates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Frigates\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Frigates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full coordinates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FullCoordinates\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FullCoordinates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FullName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FullName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full native names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FullNativeNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FullNativeNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gas-diesel oils\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GasDieselOils\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GasDieselOils\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GDP\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP deflator\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GDPDeflator\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GDPDeflator\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP per employed person\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GDPPerPersonEmployed\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GDPPerPersonEmployed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"general government final consumption expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"GeneralGovernmentFinalConsumptionExpenditure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"GeneralGovernmentFinalConsumptionExpenditure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Gini index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GiniIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GiniIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross national income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GNI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GNI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"government consumption expenditures and gross investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"GovernmentConsumptionExpendituresGrossInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"GovernmentConsumptionExpendituresGrossInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government current expenditures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentCurrentExpenditures\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"GovernmentCurrentExpenditures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government current receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentCurrentReceipts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentCurrentReceipts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentDebt\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government education spending as portion of GNI\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"GovernmentEducationSpendingFractionGNI\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"GovernmentEducationSpendingFractionGNI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentReceipts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentReceipts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentSaving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentSaving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government surplus\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentSurplus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentSurplus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"grants in aid\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrantsInAid\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrantsInAid\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"greenhouse gas emissions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GreenhouseGasEmissions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GreenhouseGasEmissions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross capital formation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossCapitalFormation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossCapitalFormation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross domestic income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticProduct\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Gross Domestic Purchases\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticPurchases\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticPurchases\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross domestic savings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticSavings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticSavings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross fixed capital formation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossFixedCapitalFormation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"GrossFixedCapitalFormation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross national expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossNationalExpenditure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossNationalExpenditure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross national expenditure deflator\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossNationalExpenditureDeflator\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"GrossNationalExpenditureDeflator\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GNP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossNationalProduct\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossNationalProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross savings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossSavings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossSavings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GSP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossStateProduct\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossStateProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross value added at factor cost\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossValueAddedAtFactorCost\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"GrossValueAddedAtFactorCost\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"groups\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Groups\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Groups\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total guests in hotels and similar accommodations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GuestsInHotels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GuestsInHotels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"has polygon?\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HasPolygon\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HasPolygon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Human Development Index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HDI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HDI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"highest elevation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HighestElevation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HighestElevation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"highest point\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HighestPoint\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HighestPoint\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"HIV-AIDS death rate fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HIVAIDSDeathRateFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HIVAIDSDeathRateFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"HIV/AIDS fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HIVAIDSFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HIVAIDSFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"HIV/AIDS population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HIVAIDSPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HIVAIDSPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"home ownership rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HomeOwnershipRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HomeOwnershipRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hospital beds\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HospitalBedsPer10000Population\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HospitalBedsPer10000Population\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hours worked index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HoursWorkedIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HoursWorkedIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household credit market outstanding debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"HouseholdCreditMarketOutstandingDebt\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HouseholdCreditMarketOutstandingDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household debt service\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HouseholdDebtService\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HouseholdDebtService\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household final consumption expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"HouseholdFinalConsumptionExpenditure\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HouseholdFinalConsumptionExpenditure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household financial obligation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HouseholdFinancialObligation\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HouseholdFinancialObligation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FHFA home price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousePriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousePriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FHFA home price index annual average\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousePriceIndexAnnualAverage\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HousePriceIndexAnnualAverage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"new single\[Hyphen]family home sales\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousesSold\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousesSold\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"housing affordability index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingAffordability\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingAffordability\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"housing permits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingPermit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingPermit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"housing starts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingStarts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingStarts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"households\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingUnits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingUnits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"illiteracy rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IlliteracyFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IlliteracyFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"implicit price deflator\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImplicitPriceDeflator\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImplicitPriceDeflator\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import commodities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportCommodities\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportCommodities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import partners\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportPartners\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportPartners\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import partners fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportPartnersFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportPartnersFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportsValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportsValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"improved sanitation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImprovedSanitation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImprovedSanitation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"income payments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IncomePayments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IncomePayments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"income receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IncomeReceipts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IncomeReceipts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"income share\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IncomeShare\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IncomeShare\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"independence date\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndependenceDate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IndependenceDate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"independence year\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndependenceYear\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IndependenceYear\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"industrial production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndustrialProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IndustrialProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"industrial production growth\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndustrialProductionGrowth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"IndustrialProductionGrowth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"infant mortality fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InfantMortalityFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InfantMortalityFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"infectious diseases\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InfectiousDiseases\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InfectiousDiseases\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inflation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Inflation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Inflation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inflation expectation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InflationExpectation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InflationExpectation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inflation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InflationRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InflationRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"informal payments to public officials\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InformalPaymentsToPublicOfficials\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"InformalPaymentsToPublicOfficials\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"institutional money funds\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InstitutionalMoneyFunds\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InstitutionalMoneyFunds\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"intake rate in grade 1\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IntakeRateInGrade1\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IntakeRateInGrade1\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"interest rate spread\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InterestRateSpread\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InterestRateSpread\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"international migrant stock\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternationalMigrantStock\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternationalMigrantStock\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"international organizations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternationalOrganizations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"InternationalOrganizations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"international organizations observer\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternationalOrganizationsObserver\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"InternationalOrganizationsObserver\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"internet code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"internet hosts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetHosts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetHosts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average broadband download rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetSpeedDownloadRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetSpeedDownloadRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average broadband upload rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetSpeedUploadRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetSpeedUploadRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"internet usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetUsers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetUsers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inventory to sales ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InventoryToSalesRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InventoryToSalesRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"investment on medical facilities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InvestmentOnMedicalFacilities\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"InvestmentOnMedicalFacilities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"IP addresses\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IPCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IPCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total IRA and Keogh accounts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IRAKeoghAccounts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IRAKeoghAccounts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"irrigated land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IrrigatedLandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IrrigatedLandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"irrigated land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IrrigatedLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IrrigatedLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Islamic Revolutionary Guard corps\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IslamicRevolutionaryGuardCorps\""}], 
       "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"IslamicRevolutionaryGuardCorps\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms with ISO quality certification\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ISOCertificationOwnership\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ISOCertificationOwnership\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ISO name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ISOName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ISOName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"International Telecommunication Union region\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ITURegion\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ITURegion\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"laboratory health workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaboratoryHealthWorkers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaboratoryHealthWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"laboratory health workers per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"LaboratoryHealthWorkersPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"LaboratoryHealthWorkersPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"labor force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaborForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaborForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"labor force fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaborForceFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaborForceFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"labor participation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaborParticipationRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaborParticipationRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crop land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LandAreaCrops\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LandAreaCrops\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"languages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Languages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Languages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"language dialects\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LanguagesDialects\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LanguagesDialects\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"language fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LanguagesFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LanguagesFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of larcenies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LarcenyTheft\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LarcenyTheft\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of larceny\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LarcenyTheftRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LarcenyTheftRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"largest cities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LargestCities\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LargestCities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"latitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Latitude\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Latitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lead time to export\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LeadTimeToExport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LeadTimeToExport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lead time to import\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LeadTimeToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LeadTimeToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual abortions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LegalAbortions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LegalAbortions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"leisure arrivals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LeisureArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LeisureArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lending interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LendingInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LendingInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"license plate code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LicensePlateCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LicensePlateCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LifeExpectancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"liner shipping connectivity index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LinerShippingConnectivityIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"LinerShippingConnectivityIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"liquid assets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LiquidAssets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LiquidAssets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"literacy rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LiteracyRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LiteracyRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"livestock population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LivestockPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LivestockPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"logistics performance index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LogisticsPerformanceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LogisticsPerformanceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"longitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Longitude\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Longitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"long\[Hyphen]term unemployment rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LongTermUnemploymentRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LongTermUnemploymentRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"losses due to theft, robbery, vandalism, and arson\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"LossesDueToTheftRobberyVandalismAndArson\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"LossesDueToTheftRobberyVandalismAndArson\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lowest elevation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LowestElevation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LowestElevation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lowest point\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LowestPoint\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LowestPoint\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"M2 interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"M2InterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"M2InterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"M2 minus interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"M2MinusInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"M2MinusInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"machinery and transport equipment fraction of manufacturing value \
added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"MachineryAndTransportEquipmentFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MachineryAndTransportEquipmentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"main battle tanks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MainBattleTanks\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MainBattleTanks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"major industries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MajorIndustries\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MajorIndustries\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"major ports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MajorPorts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MajorPorts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male adult population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleAdultPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleAdultPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male child population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleChildPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleChildPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male elderly population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleElderlyPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleElderlyPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male infant mortality fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleInfantMortalityFraction\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"MaleInfantMortalityFraction\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleLifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleLifeExpectancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male median age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleMedianAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleMedianAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MalePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MalePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"management time dealing with officials\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ManagementTimeDealingWithOfficials\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ManagementTimeDealingWithOfficials\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"manufacturers new orders\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ManufacturersNewOrders\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ManufacturersNewOrders\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"marine corps\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MarineCorps\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MarineCorps\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"protected fraction of territorial waters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MarineProtectedAreasFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MarineProtectedAreasFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"maritime claims\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaritimeClaims\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaritimeClaims\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"meat production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MeatProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MeatProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home sale price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHomeSalePrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHomeSalePrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHomeValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHomeValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median household income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHouseholdIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHouseholdIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"memberships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Memberships\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Memberships\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShips\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShips\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ships dead weight\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShipsDeadWeight\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShipsDeadWeight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ships gross\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShipsGross\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShipsGross\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ship types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShipTypes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShipTypes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age females\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgeFemales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgeFemales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age males\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgeMales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgeMales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military expenditure fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryExpenditureFraction\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"MilitaryExpenditureFraction\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military expenditures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryExpenditures\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryExpenditures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military fit females\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryFitFemales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryFitFemales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military fit males\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryFitMales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryFitMales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military fit population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryFitPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryFitPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"minimum wage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MinimumWage\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MinimumWage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"miscellaneous value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MiscellaneousValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MiscellaneousValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"mobile cellular subscriptions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MobileCellularSubscriptions\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"MobileCellularSubscriptions\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"monetary base\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MonetaryBase\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MonetaryBase\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"monetary services index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MonetaryServicesIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MonetaryServicesIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"money multiplier\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MoneyMultiplier\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MoneyMultiplier\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"money supply\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MoneySupply\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MoneySupply\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motor gasoline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MotorGasoline\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MotorGasoline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of motor vehicle thefts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MotorVehicleTheft\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MotorVehicleTheft\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of motor vehicle thefts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MotorVehicleTheftRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MotorVehicleTheftRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"multifactor productivity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MultifactorProductivity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MultifactorProductivity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"incidents of murder and nonnegligent manslaughter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MurderNonnegligentManslaughter\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MurderNonnegligentManslaughter\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of murder and nonnegligent manslaughter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MurderNonnegligentManslaughterRate\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MurderNonnegligentManslaughterRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"MZM interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MZMInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MZMInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"national gendarmerie\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalGendarmerie\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalGendarmerie\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"national guard\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalGuard\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalGuard\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"national income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nationality name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalityName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalityName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"native names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NativeNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NativeNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas exports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasExports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasExports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas imports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasImports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasImports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasSpotPrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasSpotPrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural hazards\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalHazards\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalHazards\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural resources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalResources\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalResources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural resources rents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalResourcesRents\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalResourcesRents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"navy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Navy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Navy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"neonates protected against neonatal tetanus\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"NeonatesProtectedAgainstNeonatalTetanus\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NeonatesProtectedAgainstNeonatalTetanus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"net current transfers from abroad\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NetCurrentTransfersFromAbroad\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NetCurrentTransfersFromAbroad\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"net income from abroad\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NetIncomeFromAbroad\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NetIncomeFromAbroad\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"net migration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NetMigration\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NetMigration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"newborns with low birth weight\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewbornsWithLowBirthWeight\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"NewbornsWithLowBirthWeight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"new businesses registered\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewBusinessesRegistered\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewBusinessesRegistered\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"newspaper circulation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewspaperCirculation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewspaperCirculation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of newspaper titles\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewspaperTitles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewspaperTitles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"size of nuclear stockpile\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NuclearWarheads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NuclearWarheads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of owner\[Hyphen]occupied housing units\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfHomes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NumberOfHomes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of marine protected areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfMarineProtectedAreas\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NumberOfMarineProtectedAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"teachers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfTeachers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NumberOfTeachers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of terrestrial protected areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfTerrestrialProtectedAreas\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NumberOfTerrestrialProtectedAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nursing and midwifery personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NursingAndMidwiferyPersonnel\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NursingAndMidwiferyPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nursing and midwifery personnel per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"NursingAndMidwiferyPersonnelPopulationRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"NursingAndMidwiferyPersonnelPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"official languages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OfficialLanguages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OfficialLanguages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"oil exports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OilExports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OilExports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"oil imports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OilImports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OilImports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"oil reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OilReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OilReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"DTP immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithDTP3\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"OneYearOldsImmunizedWithDTP3\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hepatitis B immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithHepB3\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"OneYearOldsImmunizedWithHepB3\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Hib immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithHib3\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"OneYearOldsImmunizedWithHib3\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"MCV immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithMCV\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"OneYearOldsImmunizedWithMCV\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other arrivals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OtherArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other checkable deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherCheckableDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OtherCheckableDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other health service providers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherHealthServiceProviders\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"OtherHealthServiceProviders\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"other manufacturing fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherManufacturingFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"OtherManufacturingFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"economic output\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Output\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Output\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"output per hour\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OutputPerHour\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OutputPerHour\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total hotel nights\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OvernightHotels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OvernightHotels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"overnight term Eurodollars\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OvernightTermEurodollars\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OvernightTermEurodollars\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"overnight and term RPs\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OvernightTermRPs\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OvernightTermRPs\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paper and paperboard production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PaperPaperboardProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PaperPaperboardProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"part time employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PartTimeEmployment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PartTimeEmployment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"part time employment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PartTimeEmploymentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"PartTimeEmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paved airport lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PavedAirportLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PavedAirportLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paved airports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PavedAirports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PavedAirports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paved roads fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PavedRoadsFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PavedRoadsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"per capita income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PerCapitaIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PerCapitaIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"persistence to grade 5\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersistenceToGrade5\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersistenceToGrade5\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"persistence to last grade of primary\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersistenceToLastGradeOfPrimary\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PersistenceToLastGradeOfPrimary\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal consumption expenditures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalConsumptionExpenditures\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PersonalConsumptionExpenditures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersonalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalSaving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersonalSaving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal saving rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalSavingRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersonalSavingRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crude oil\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumCrudeOil\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumCrudeOil\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crude oil\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumCrudeOilBarrels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumCrudeOilBarrels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas plant liquids\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumNGPL\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumNGPL\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas plant liquids\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumNGPLBarrels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumNGPLBarrels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total petroleum\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"petroleum\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumTotalBarrels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumTotalBarrels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pharmaceutical personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PharmaceuticalPersonnel\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PharmaceuticalPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pharmaceutical personnel per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"PharmaceuticalPersonnelPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PharmaceuticalPersonnelPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"physicians\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Physicians\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Physicians\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"physicians per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PhysiciansPopulationRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PhysiciansPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pipelines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Pipelines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Pipelines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PMI composite index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PMICompositeIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PMICompositeIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"polygon\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Polygon\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Polygon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by educational attainment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByEducationalAttainment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationByEducationalAttainment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by migration in previous 12 months\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByGeographicalMobility\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationByGeographicalMobility\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by language spoken at home\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByLanguageSpokenAtHome\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationByLanguageSpokenAtHome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by marital status\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByMaritalStatus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationByMaritalStatus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by poverty status\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByPovertyStatus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationByPovertyStatus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by school enrollment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationBySchoolEnrollment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationBySchoolEnrollment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population growth\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationGrowth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationGrowth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"center coordinates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Position\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Position\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"potential GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PotentialGrossDomesticProduct\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PotentialGrossDomesticProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"poverty gap\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PovertyGap\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PovertyGap\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"poverty fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PovertyHeadcount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PovertyHeadcount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PPP conversion factor gdp\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PPPConversionFactorGDP\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PPPConversionFactorGDP\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PPP conversion factor for private consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"PPPConversionFactorPrivateConsumption\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PPPConversionFactorPrivateConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"presidential guard\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PresidentialGuard\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PresidentialGuard\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"primary credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrimaryCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrimaryCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private credit bureau coverage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateCreditBureauCoverage\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"PrivateCreditBureauCoverage\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private domestic investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateDomesticInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateDomesticInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private fixed investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateFixedInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateFixedInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private inventories change\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateInventoriesChange\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateInventoriesChange\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateSaving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateSaving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"producer price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ProducerPriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ProducerPriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"progression to secondary school\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ProgressionToSecondarySchool\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ProgressionToSecondarySchool\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total rate of property crime\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PropertyCrimeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PropertyCrimeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total number of property crimes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PropertyCrimeTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PropertyCrimeTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"proportion of seats held by women in national parliaments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"ProportionOfSeatsHeldByWomenInNationalParliaments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ProportionOfSeatsHeldByWomenInNationalParliaments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"public credit registry coverage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PublicCreditRegistryCoverage\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PublicCreditRegistryCoverage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"public spending on education\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PublicSpendingOnEducation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PublicSpendingOnEducation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"public education spending\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PublicSpendingOnEducationFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PublicSpendingOnEducationFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pump price for diesel fuel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PumpPriceForDieselFuel\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PumpPriceForDieselFuel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pump price for gasoline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PumpPriceForGasoline\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PumpPriceForGasoline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"students\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Pupils\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Pupils\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fraction of students\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PupilsFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PupilsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"student/teacher ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PupilTeacherRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PupilTeacherRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"quality of port infrastructure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"QualityOfPortInfrastructure\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"QualityOfPortInfrastructure\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"radio receivers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RadioReceivers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RadioReceivers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by rail\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"railway length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailLines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailLines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"railway gauge lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailwayGaugeLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailwayGaugeLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"railway gauge rules\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailwayGaugeRules\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailwayGaugeRules\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rail transport\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Railways\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Railways\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ratio of female to male students\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RatioOfFemaleToMale\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RatioOfFemaleToMale\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ratio of young literate female to male\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RatioOfYoungLiterateFemaleToMale\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RatioOfYoungLiterateFemaleToMale\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"real effective exchange rate index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RealEffectiveExchangeRateIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RealEffectiveExchangeRateIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"real interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RealInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RealInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refinery gain/loss\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefineryProcessingGain\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefineryProcessingGain\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refinery production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefineryTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefineryTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refugees from other countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefugeePopulationAsylum\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefugeePopulationAsylum\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refugees in other countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefugeePopulationOrigin\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefugeePopulationOrigin\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"region names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RegionNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RegionNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"religions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReligionsFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReligionsFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"renewable internal freshwater resources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"RenewableInternalFreshwaterResources\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RenewableInternalFreshwaterResources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rental income of persons\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RentalIncomeOfPersons\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RentalIncomeOfPersons\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"students repeating a grade\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Repeaters\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Repeaters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"required reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RequiredReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RequiredReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"research and development researchers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ResearchDevelopmentScientists\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ResearchDevelopmentScientists\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve adjustment magnitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveAdjustmentMagnitude\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ReserveAdjustmentMagnitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve air force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveAirForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveAirForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve army\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveArmy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveArmy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve balances\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveBalances\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveBalances\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve bank credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveBankCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveBankCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve marine corps\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveMarineCorps\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveMarineCorps\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve navy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveNavy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveNavy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Reserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Reserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"retail money funds\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RetailMoneyFunds\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RetailMoneyFunds\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"retail sales\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RetailSales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RetailSales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"risk premium on lending\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RiskPremiumOnLending\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RiskPremiumOnLending\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road accidents causing injury\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadAccidentsInjuryAccidents\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road accidents causing injury per amount of traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilometers\""}\
], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilometers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road accidents causing injury per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsInjuryAccidentsPerHundredThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidentsPerHundredThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people injured in road accidents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadAccidentsPeopleInjured\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjured\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people injured in road accidents per amount of traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilometers\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilometers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people injured in road accidents per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleInjuredPerHundredThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjuredPerHundredThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people killed in road accidents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadAccidentsPeopleKilled\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadAccidentsPeopleKilled\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people killed in road accidents per amount of traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people killed in road accidents per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleKilledPerHundredThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilledPerHundredThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by road\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"highways density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkHighwaysDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkHighwaysDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of highways\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkHighwaysLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkHighwaysLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorways density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkMotorwaysDensity\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkMotorwaysDensity\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of motorways\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkMotorwaysLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkMotorwaysLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other roads density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkOthersDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkOthersDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of other road types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkOthersLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkOthersLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total road density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkRoadDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkRoadDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"secondary roads density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkSecondaryRoadsDensity\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkSecondaryRoadsDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of secondary roads\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkSecondaryRoadsLength\""}], 
       "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkSecondaryRoadsLength\\\
\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkTotalLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkTotalLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road transport\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Roads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Roads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector diesel fuel consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadSectorDieselFuelConsumption\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorDieselFuelConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector energy consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadSectorEnergyConsumption\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"RoadSectorEnergyConsumption\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector energy consumption fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"RoadSectorEnergyConsumptionFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorEnergyConsumptionFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector gasoline fuel consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadSectorGasolineFuelConsumption\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorGasolineFuelConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bus traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficBuses\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficBuses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycle traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficMotorcycles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficMotorcycles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger car traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficPassengerCars\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficPassengerCars\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total road traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"truck and van traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficTrucksAndVans\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficTrucksAndVans\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of robberies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Robbery\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Robbery\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of robbery\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RobberyRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RobberyRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"roundwood production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoundwoodProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoundwoodProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Saving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Saving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"savings deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SavingsDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SavingsDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"savings and small time deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SavingsSmallTimeDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SavingsSmallTimeDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"sawnwood production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SawnwoodProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SawnwoodProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"schematic polygon\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SchematicPolygon\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SchematicPolygon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school enrollment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SchoolEnrollmentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SchoolEnrollmentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"seasonal bank borrowings from Fed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SeasonalBorrowings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SeasonalBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"sector labor fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SectorLaborFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SectorLaborFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"secure internet servers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SecureInternetServers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SecureInternetServers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"securities lent to dealers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SecuritiesLentToDealers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SecuritiesLentToDealers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"self employed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SelfEmployed\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SelfEmployed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"self employed fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SelfEmployedFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SelfEmployedFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"service related deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ServiceRelatedDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ServiceRelatedDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"shape\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Shape\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Shape\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"share of women employed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ShareOfWomenEmployed\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ShareOfWomenEmployed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"short wave radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ShortWaveRadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ShortWaveRadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"signed environmental agreements\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SignedEnvironmentalAgreements\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SignedEnvironmentalAgreements\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"spot oil price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SpotOilPrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SpotOilPrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school starting age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"StartingAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"StartingAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"start up procedures to register a business\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"StartUpProceduresToRegisterABusiness\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"StartUpProceduresToRegisterABusiness\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"statistical discrepancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"StatisticalDiscrepancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"StatisticalDiscrepancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"strength of legal rights\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"StrengthOfLegalRightsIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"StrengthOfLegalRightsIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"submarines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Submarines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Submarines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"suffrage type\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SuffrageType\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SuffrageType\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"target federal funds rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TargetFederalFundsRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TargetFederalFundsRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of business taxes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TaxPayments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TaxPayments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"telephone lines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TelephoneLines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TelephoneLines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"television receivers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TelevisionReceivers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TelevisionReceivers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"television stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TelevisionStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TelevisionStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"terms of trade adjustment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TermsOfTradeAdjustment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TermsOfTradeAdjustment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"terrain types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TerrainTypes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TerrainTypes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"terrestrial protected areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TerrestrialProtectedAreas\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TerrestrialProtectedAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"textiles and clothing fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TextilesAndClothingFraction\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"TextilesAndClothingFraction\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to build a warehouse\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToBuildAWarehouse\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToBuildAWarehouse\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to enforce a contract\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToEnforceAContract\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToEnforceAContract\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to obtain an operating license\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"TimeRequiredToObtainAnOperatingLicense\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToObtainAnOperatingLicense\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to register property\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToRegisterProperty\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToRegisterProperty\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to start a business\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToStartABusiness\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToStartABusiness\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total time and savings deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeSavingsDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeSavingsDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time to prepare and pay taxes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeToPrepareAndPayTaxes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeToPrepareAndPayTaxes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time to resolve insolvency\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeToResolveInsolvency\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeToResolveInsolvency\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time zones\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeZones\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeZones\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current tobacco use among adolescents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TobaccoUseAdolescents\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TobaccoUseAdolescents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current tobacco use among adults\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TobaccoUseAdults\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TobaccoUseAdults\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total annual visitors\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total borrowings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBorrowings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total registered businesses\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBusinessesRegistered\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBusinessesRegistered\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total business inventory\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBusinessInventory\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBusinessInventory\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total business tax rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBusinessTaxRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBusinessTaxRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total fertility rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalFertilityRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalFertilityRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Trade\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Trade\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade balance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeBalance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TradeBalance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade deficit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeDeficit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TradeDeficit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TradeValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade-weighted exchange index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeWeightedExchangeIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"TradeWeightedExchangeIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"transportation value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TransportationValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TransportationValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"traveler's checks outstanding\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TravelersChecksOutstanding\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"TravelersChecksOutstanding\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury security\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Treasury\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Treasury\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury average yield\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TreasuryAverageYield\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TreasuryAverageYield\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TreasuryDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TreasuryDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury securities composite rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TreasurySecuritiesCompositeRate\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TreasurySecuritiesCompositeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"UN code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UNCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UNCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployed people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Unemployment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Unemployment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployment average duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnemploymentAverageDuration\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"UnemploymentAverageDuration\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployment median duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnemploymentMedianDuration\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"UnemploymentMedianDuration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployment rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnemploymentRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnemploymentRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unilateral current transfers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnilateralCurrentTransfers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"UnilateralCurrentTransfers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unit labor cost\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitLaborCost\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnitLaborCost\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unit nonlabor cost\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitNonlaborCost\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnitNonlaborCost\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"UN number\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UNNumber\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UNNumber\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unpaved airport lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnpavedAirportLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnpavedAirportLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unpaved airports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnpavedAirports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnpavedAirports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unpaved road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnpavedRoadLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnpavedRoadLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unweighted sample housing units\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnweightedSampleHousingUnits\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"UnweightedSampleHousingUnits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unweighted sample population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnweightedSamplePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"UnweightedSamplePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"uranium\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Uranium\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Uranium\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"change in US owned assets abroad\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"USOwnedAssetsAbroad\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"USOwnedAssetsAbroad\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"losses due to electrical outages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ValueLostDueToElectricalOutages\""}], 
       "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ValueLostDueToElectricalOutages\\\
\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vault cash\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VaultCash\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VaultCash\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vehicle sales\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehicleSales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehicleSales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"buses in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseBuses\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehiclesInUseBuses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"buses in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseBusesPerKilometersOfRoads\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBusesPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"buses in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseBusesPerThousandPeople\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBusesPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycles in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseMotorcycles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehiclesInUseMotorcycles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycles in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUseMotorcyclesPerKilometersOfRoads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcyclesPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycles in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseMotorcyclesPerThousandPeople\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcyclesPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger cars in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUsePassengerCars\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCars\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger cars in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUsePassengerCarsPerKilometersOfRoads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCarsPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger cars in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUsePassengerCarsPerThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCarsPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total vehicles in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehiclesInUseTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total vehicles in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseTotalPerKilometersOfRoads\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotalPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total vehicles in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseTotalPerThousandPeople\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotalPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trucks and vans in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseTrucksAndVans\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVans\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trucks and vans in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUseTrucksAndVansPerKilometersOfRoads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVansPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trucks and vans in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUseTrucksAndVansPerThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVansPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total rate of violent crime\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ViolentCrimeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ViolentCrimeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total number of violent crimes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ViolentCrimeTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ViolentCrimeTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vulnerable employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VulnerableEmployment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VulnerableEmployment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vulnerable employment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VulnerableEmploymentFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VulnerableEmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wage and salaried workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WageAndSalariedWorkers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WageAndSalariedWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wage and salaried workers fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WageAndSalariedWorkersFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"WageAndSalariedWorkersFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wage cost index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WagesCostIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WagesCostIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"water area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by sea\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"water productivity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterProductivity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterProductivity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"waterway length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterwayLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterwayLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Workforce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Workforce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wholesale price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WPI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WPI\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.855306623905382*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"65f3ce92-48bc-4eba-9d23-797a6cab13fb"]
}, Open  ]],

Cell["\<\
Katera entiteta podaja povr\[SHacek]ino dr\[ZHacek]ave? Dolo\[CHacek]i povr\
\[SHacek]ino Slovenije.\
\>", "Text",
 CellChangeTimes->{{3.824282171373453*^9, 3.8242822430401754`*^9}, {
  3.8242823503769093`*^9, 3.8242823623521137`*^9}, {3.8242825520470743`*^9, 
  3.8242825580614233`*^9}},ExpressionUUID->"32bd6f13-fdab-472c-8b8a-\
b5a0d3734f1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"si", " ", "=", " ", 
  RowBox[{"drzave", "[", 
   RowBox[{"[", "25", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EntityProperty", "[", 
  RowBox[{"si", ",", "\"\<Area\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityValue", "[", 
  RowBox[{"si", ",", "\"\<Area\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8553066437592735`*^9, 3.8553066935873537`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"bb5816cc-1223-48b5-aced-fba9ebcd00c4"],

Cell[BoxData[
 TemplateBox[{"\"Slovenia\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
   "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8553067365208225`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"928811f8-f949-475a-b58b-cffbbcaab41a"],

Cell[BoxData[
 RowBox[{"EntityProperty", "[", 
  RowBox[{
   TemplateBox[{"\"Slovenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
    "Entity"], ",", "\<\"Area\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.8553067365208225`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"e0002cbd-32b7-408b-b9d7-212d3cd2c3c0"],

Cell[BoxData[
 TemplateBox[{"20273.`", 
   RowBox[{
     SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
   SuperscriptBox["\"Kilometers\"", "2"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.855306736536453*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"447e3fd6-fef1-4b2a-a6c5-b70819de06cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Priprava seznamov", "Subsection",
 CellChangeTimes->{{3.8242831376355333`*^9, 
  3.824283155659627*^9}},ExpressionUUID->"2ebdb9ca-467a-4df5-82a1-\
97a6c8e4264d"],

Cell["Definiraj seznam povr\[SHacek]in vseh dr\[ZHacek]av Evropske unije.", \
"Text",
 CellChangeTimes->{{3.8242831618588204`*^9, 
  3.8242831773672743`*^9}},ExpressionUUID->"6de16e4b-bba7-4fa2-8d03-\
c9ceb2d797bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{"d", ",", "\"\<Area\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "drzave"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.85530674793321*^9, 3.855306842002068*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3e3caef6-4fc4-4b15-91f9-741242ba7279"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"83871.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"30528.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"110879.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"56594.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"9251.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"78867.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"43094.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"45228.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"338145.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"551500.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"357022.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"131940.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"93028.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"70273.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"301340.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"64589.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"65300.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"2586.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"316.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"41543.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"312685.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"92090.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"238391.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"49035.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"20273.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"505370.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"450295.`", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8553068415626287`*^9, 3.8553068649742336`*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"9dbcc764-e36c-4ea6-8b26-5e4ca542190f"]
}, Open  ]],

Cell["\<\
Definiraj seznam, ki bo vseboval obseg vsake dr\[ZHacek]ave (tj. \
dol\[ZHacek]ino njene dr\[ZHacek]avne meje).\
\>", "Text",
 CellChangeTimes->{{3.8242832759511766`*^9, 
  3.824283369824444*^9}},ExpressionUUID->"f9df6d2d-a853-4d1d-8d29-\
afd0c49f9224"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{"d", ",", "\"\<BoundaryLength\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "drzave"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855306855598414*^9, 3.855306859786087*^9}, {
  3.8553069043181067`*^9, 3.855306919243039*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"5e8d40b4-8283-4c67-944b-4e40e9913712"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"2562.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1451.5`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"2162.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"7817.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"648.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1904.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"7382.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"4427.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"3904.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"6316.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"6094.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"14904.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"2177.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1808.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"9499.2`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1880.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1664.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"359.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"196.8`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1478.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"3487.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"3007.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"2736.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1474.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"1132.6`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"6881.9`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"5451.`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8553069463407245`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ab4004fb-f653-436f-86ea-3f66f6fb5c81"]
}, Open  ]],

Cell["\<\
Definiraj seznam, ki bo vseboval razmerje povr\[SHacek]ina/dol\[ZHacek]ina \
meje za vsako dr\[ZHacek]avo.\
\>", "Text",
 CellChangeTimes->{{3.824284113421982*^9, 
  3.824284141405942*^9}},ExpressionUUID->"c263b8a7-c8c6-41b2-a8ed-\
56d3cc25afd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{"d", ",", "\"\<Area\>\""}], "]"}], "/", 
    RowBox[{"EntityValue", "[", 
     RowBox[{"d", ",", "\"\<BoundaryLength\>\""}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "drzave"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855306971088145*^9, 3.8553069726663976`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"3a9a2da0-e959-4f2b-9419-d8c068ef81e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "32.73653395784543`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "21.032035825008613`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "51.285383903792784`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "7.239861839580402`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "14.276234567901234`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "41.42174369747899`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "5.837713356813872`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "10.216399367517505`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "86.61501024590164`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "87.31792273590881`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "58.585822120118145`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "8.852657004830919`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "42.73220027560863`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "38.86780973451327`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "31.722671382853292`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "34.35585106382979`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "39.24278846153847`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "7.203342618384401`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "1.6056910569105691`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "28.107577807848447`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "89.67163751075422`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "30.62520784835384`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "87.13121345029239`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "33.26662143826323`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "17.899523220907643`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "73.43466193929001`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "82.60777838928637`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8553069798022366`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"db3130ac-99c2-4d3b-9345-29101dfd690e"]
}, Open  ]],

Cell["Definiraj \[SHacek]e seznam, ki vsebuje BDP za vsako dr\[ZHacek]avo.", \
"Text",
 CellChangeTimes->{{3.824284184952864*^9, 
  3.8242842185739183`*^9}},ExpressionUUID->"0259aba5-14f9-4345-a419-\
3167ddd68e15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{"d", ",", "\"\<GDP\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "drzave"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8553070177686834`*^9, 3.8553070190104756`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"a7d6c196-a9b7-4e33-8ed5-58fa76f98aec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"4.30947393757511`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"5.15332499627861`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"6.91051010895531`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"5.59665817801688`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"2.38043403769275`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"2.4534948998826`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"3.56084867685639`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"3.06502854717215`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"2.69751312854475`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"2.63031773145526`*^12", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"3.84641392865371`*^12", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"1.89410106620016`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"1.55012927629087`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"4.25888950992003`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"1.88644526834071`*^12", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"3.35051852287067`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"5.58872718330025`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"7.32639821030119`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"1.4647384607604`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"9.13865395789886`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"5.94164690894936`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"2.31226743398402`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"2.48715551366635`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"1.04574146248364`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"5.35896095807099`*^10", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"1.28148464004358`*^12", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"5.41063604339715`*^11", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
     "US dollars per year", 
     FractionBox["\"USDollars\"", "\"Years\""]},
    "QuantityPrefixUnit"]}], "}"}]], "Output",
 CellChangeTimes->{3.8553070504424777`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"c0d9412f-0946-42c2-a0ae-e3bc7024d175"]
}, Open  ]],

Cell["\<\
V istem koordinatnem sistemu predstavi BDP in razmerje povr\[SHacek]ina/dol\
\[ZHacek]ina meje za vsako dr\[ZHacek]avo.\
\>", "Text",
 CellChangeTimes->{{3.8242844826511707`*^9, 
  3.8242845350826993`*^9}},ExpressionUUID->"88cbd3b9-e0f2-46f1-ac7e-\
0da06423e561"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"razmerje", "[", "drzava_", "]"}], ":=", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{"drzava", ",", "\"\<Area\>\""}], "]"}], "/", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"drzava", ",", "\"\<BoundaryLength\>\""}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"razmerje", "[", "si", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"funfact", " ", "si"}], " ", "\[Equal]", " ", "sl", " ", 
     "\[Equal]", " ", "slovenija"}], ",", " ", 
    RowBox[{
    "samo", " ", "ne\[ZHacek]ka", " ", "je", " ", "slepa", " ", "in", " ", 
     "ne", " ", "vidi", " ", "na", " ", 
     RowBox[{"tablo", ":", "D"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8553071413034105`*^9, 
  3.8553072548726625`*^9}},ExpressionUUID->"3785c557-108d-46b2-a15f-\
8dd203e0aaa1"],

Cell[BoxData[
 TemplateBox[{"17.899523220907643`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8553072081594315`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"1611dc43-f23c-4421-b355-d905907cf10d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"koordinate", "[", "drzava_", "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"EntityValue", "[", 
       RowBox[{"drzava", ",", "\"\<GDP\>\""}], "]"}], "]"}], "/", 
     RowBox[{"10", "^", "10"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"razmerje", "[", "drzava", "]"}], "]"}]}], "\[IndentingNewLine]",
    "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"koordinate", "[", "si", "]"}]}], "Input",
 CellChangeTimes->{{3.8553072727896194`*^9, 3.8553073514995337`*^9}, {
  3.8553075901336365`*^9, 3.8553077025716763`*^9}, {3.8553077971839*^9, 
  3.8553077998246036`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"eb96c2d9-d12e-4be5-af91-fe5bd1606297"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.35896095807099`", ",", "17.899523220907643`"}], "}"}]], "Output",
 CellChangeTimes->{3.855307757693781*^9, 3.8553078012152414`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"bbceb1ed-4b7b-4d2d-bfcd-b49496e99a8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Point", "[", 
     RowBox[{"koordinate", "[", "d", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "drzave"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8553073651469975`*^9, 3.855307387360591*^9}, {
  3.8553077191621184`*^9, 3.855307752555441*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"2a0d7115-ef10-4a7d-aa76-cdd8086a0eb5"],

Cell[BoxData[
 GraphicsBox[{PointBox[{43.094739375751104`, 32.73653395784543}], 
   PointBox[{51.5332499627861, 21.032035825008613`}], 
   PointBox[{6.91051010895531, 51.285383903792784`}], 
   PointBox[{5.59665817801688, 7.239861839580402}], 
   PointBox[{2.3804340376927504`, 14.276234567901234`}], 
   PointBox[{24.534948998826003`, 41.42174369747899}], 
   PointBox[{35.6084867685639, 5.837713356813872}], 
   PointBox[{3.06502854717215, 10.216399367517505`}], 
   PointBox[{26.975131285447503`, 86.61501024590164}], 
   PointBox[{263.03177314552596`, 87.31792273590881}], 
   PointBox[{384.641392865371, 58.585822120118145`}], 
   PointBox[{18.9410106620016, 8.852657004830919}], 
   PointBox[{15.501292762908701`, 42.73220027560863}], 
   PointBox[{42.5888950992003, 38.86780973451327}], 
   PointBox[{188.644526834071, 31.722671382853292`}], 
   PointBox[{3.35051852287067, 34.35585106382979}], 
   PointBox[{5.58872718330025, 39.24278846153847}], 
   PointBox[{7.326398210301191, 7.203342618384401}], 
   PointBox[{1.4647384607604002`, 1.6056910569105691`}], 
   PointBox[{91.3865395789886, 28.107577807848447`}], 
   PointBox[{59.4164690894936, 89.67163751075422}], 
   PointBox[{23.122674339840202`, 30.62520784835384}], 
   PointBox[{24.871555136663503`, 87.13121345029239}], 
   PointBox[{10.4574146248364, 33.26662143826323}], 
   PointBox[{5.35896095807099, 17.899523220907643`}], 
   PointBox[{128.148464004358, 73.43466193929001}], 
   PointBox[{54.1063604339715, 82.60777838928637}]}]], "Output",
 CellChangeTimes->{
  3.855307393107077*^9, {3.855307753867956*^9, 3.855307759728345*^9}, 
   3.8553078031059275`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"ca58e058-635e-48af-9617-369eadee50d8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"751e0173-1b54-4baf-ac7f-39af7c890363"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 333, 5, 107, "Title",ExpressionUUID->"5c608c4c-fbd4-4970-b68d-6b33f9db441c"],
Cell[916, 29, 306, 5, 39, "Text",ExpressionUUID->"5192b6bb-7251-4ec2-9b5b-ddecd5d5893b"],
Cell[1225, 36, 502, 9, 39, "Text",ExpressionUUID->"bd7f36e2-6b14-4e30-b8d6-e5450ddb3ecf"],
Cell[CellGroupData[{
Cell[1752, 49, 211, 4, 59, "Subsection",ExpressionUUID->"0b99bd35-4f2a-49eb-8971-833816194ada"],
Cell[1966, 55, 464, 10, 39, "Text",ExpressionUUID->"6597dbb4-acaf-482a-a5ae-2952be4ce6a5"],
Cell[2433, 67, 244, 5, 32, "Input",ExpressionUUID->"fc1a9714-3c93-41d5-82ce-dd42decd1f68"],
Cell[2680, 74, 19201, 407, 404, "WolframAlphaShortInput",ExpressionUUID->"3f889d83-4de8-4421-9b2b-5d0e78acc3f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21918, 486, 202, 4, 73, "Section",ExpressionUUID->"2ba2c46c-61d3-43a9-803e-4fa3d0c38e26"],
Cell[22123, 492, 270, 5, 39, "Text",ExpressionUUID->"f45d1f7b-b3f0-4518-b297-86515d4da031"],
Cell[22396, 499, 270, 7, 32, "Input",ExpressionUUID->"acec563d-fa5d-45b4-bb4d-6363fbd6bc03"],
Cell[22669, 508, 357, 7, 39, "Text",ExpressionUUID->"9930abba-78cf-458d-bd17-19166f4087a6"],
Cell[23029, 517, 309, 7, 32, "Input",ExpressionUUID->"5c8a373c-a46c-42c7-a32e-90e5d0775516"],
Cell[CellGroupData[{
Cell[23363, 528, 30763, 690, 72, "WolframAlphaShortInput",ExpressionUUID->"98504816-31fd-402d-a306-7a8205490174"],
Cell[54129, 1220, 7638, 193, 42, "Output",ExpressionUUID->"fc71b780-0181-405c-83a7-16df58b4e913"]
}, Open  ]],
Cell[61782, 1416, 461, 12, 32, "Input",ExpressionUUID->"b32a9d71-726a-46ce-bff4-55a8c04098be"],
Cell[62246, 1430, 283, 4, 39, "Text",ExpressionUUID->"956fddda-adc3-4d90-ad08-0bd467b00fa6"],
Cell[CellGroupData[{
Cell[62554, 1438, 17652, 339, 91, "WolframAlphaShortInput",ExpressionUUID->"88708fda-2a24-4dcb-aa67-be667cf643c3"],
Cell[80209, 1779, 2092, 53, 62, "Output",ExpressionUUID->"3521c278-8710-449e-a7a9-b1489c1857c3"]
}, Open  ]],
Cell[82316, 1835, 288, 7, 39, "Text",ExpressionUUID->"983235d9-2199-4320-aa41-4140786695b3"],
Cell[82607, 1844, 289, 7, 39, "Text",ExpressionUUID->"526497e1-2595-4dbd-a188-6ea12cdef481"],
Cell[82899, 1853, 367, 7, 39, "Text",ExpressionUUID->"4263f19c-abbb-4aff-bc8a-2438bca4c932"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83303, 1865, 205, 4, 73, "Section",ExpressionUUID->"e0e99eb6-5dc4-427e-9e91-f366f683ed3c"],
Cell[83511, 1871, 224, 4, 39, "Text",ExpressionUUID->"72cbf5bf-0293-4a39-b45b-d89408d5eb1d"],
Cell[83738, 1877, 326, 8, 32, "Input",ExpressionUUID->"25d58482-2088-4068-b0e7-277ff84b69bd"],
Cell[CellGroupData[{
Cell[84089, 1889, 16568, 385, 80, "WolframAlphaShortInput",ExpressionUUID->"37fdc8a4-7e55-4e2c-837c-d617a4e97fbb"],
Cell[100660, 2276, 302, 7, 48, "Output",ExpressionUUID->"08c00d6d-0439-45dc-91c3-b40014f507ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100999, 2288, 36892, 759, 120, "WolframAlphaShortInput",ExpressionUUID->"2d4eebe6-fa5e-4513-8556-c979550cc6f5"],
Cell[137894, 3049, 229, 4, 44, "Output",ExpressionUUID->"335e9a04-d919-4f2a-95c0-36052fa7231f"]
}, Open  ]],
Cell[138138, 3056, 295, 4, 39, "Text",ExpressionUUID->"b73b474a-3ce6-4aa4-b883-67ae18353942"],
Cell[138436, 3062, 502, 13, 32, "Input",ExpressionUUID->"c07aaea5-544f-43aa-b68b-39ad0050a8f1"],
Cell[CellGroupData[{
Cell[138963, 3079, 18184, 365, 94, "WolframAlphaShortInput",ExpressionUUID->"a8a06d6d-9a44-41f3-86ef-7aced894c3e9"],
Cell[157150, 3446, 6184, 149, 114, "Output",ExpressionUUID->"4bb497eb-5964-4f5c-b61c-0d4e938b364f"]
}, Open  ]],
Cell[163349, 3598, 287, 7, 32, "Input",ExpressionUUID->"f1f59e09-ff97-4b4d-88b6-163e68be61ac"],
Cell[CellGroupData[{
Cell[163661, 3609, 24115, 536, 82, "WolframAlphaShortInput",ExpressionUUID->"ef160c36-303c-44e1-81eb-5a72f6d31bde"],
Cell[187779, 4147, 214, 3, 36, "Output",ExpressionUUID->"4de104ea-a74d-4d6a-ac72-25267ea099ad"]
}, Open  ]],
Cell[188008, 4153, 235, 4, 39, "Text",ExpressionUUID->"487958ce-c9c5-4468-8635-db4394b748f9"],
Cell[CellGroupData[{
Cell[188268, 4161, 19367, 450, 80, "WolframAlphaShortInput",ExpressionUUID->"a9a6a65d-fb9f-4b8a-ade1-edf41f76bd7a"],
Cell[207638, 4613, 246, 4, 43, "Output",ExpressionUUID->"337289fd-2942-4d7c-80e4-1fd6d03a9a19"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207933, 4623, 206, 4, 73, "Section",ExpressionUUID->"522eec24-e21c-4acc-a5ef-fe5403dcf51a"],
Cell[208142, 4629, 290, 6, 39, "Text",ExpressionUUID->"50ffaa19-721a-4675-8edb-3f1bb972a80d"],
Cell[CellGroupData[{
Cell[208457, 4639, 167, 3, 59, "Subsection",ExpressionUUID->"26a06061-9741-4ecf-b5a6-13e5759fe696"],
Cell[208627, 4644, 285, 7, 39, "Text",ExpressionUUID->"52cd3b1c-58e4-4f40-8075-701bfe034922"],
Cell[CellGroupData[{
Cell[208937, 4655, 15491, 363, 80, "WolframAlphaShortInput",ExpressionUUID->"8ed25811-9d1b-4ade-bdf1-c6d5ec4dff2b"],
Cell[224431, 5020, 5917, 139, 84, "Output",ExpressionUUID->"7ee2ea8f-5e41-456c-a843-e15d31810bcf"]
}, Open  ]],
Cell[230363, 5162, 249, 6, 39, "Text",ExpressionUUID->"1290e2b5-96b2-4cab-acad-87409ae820b2"],
Cell[CellGroupData[{
Cell[230637, 5172, 8682, 170, 91, "WolframAlphaShortInput",ExpressionUUID->"e5f17a13-05e2-4264-b7cf-937298f8d171"],
Cell[239322, 5344, 152, 2, 36, "Output",ExpressionUUID->"cc7be722-d6d7-47a1-976e-86bd1cc0d971"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239511, 5351, 213, 3, 32, "Input",ExpressionUUID->"7a50b412-324d-4609-bf80-bc04527f5f2b"],
Cell[239727, 5356, 150, 2, 36, "Output",ExpressionUUID->"29f51da8-502b-4b16-9cd7-6ad7fb051932"]
}, Open  ]],
Cell[239892, 5361, 568, 15, 39, "Text",ExpressionUUID->"6cd44166-c96b-4bd6-8a65-26aef9c5588e"],
Cell[CellGroupData[{
Cell[240485, 5380, 277, 5, 32, "Input",ExpressionUUID->"5b07215d-050b-4480-ad3f-c02cbcb0682c"],
Cell[240765, 5387, 198643, 4021, 2790, "Output",ExpressionUUID->"65f3ce92-48bc-4eba-9d23-797a6cab13fb"]
}, Open  ]],
Cell[439423, 9411, 355, 7, 39, "Text",ExpressionUUID->"32bd6f13-fdab-472c-8b8a-b5a0d3734f1f"],
Cell[CellGroupData[{
Cell[439803, 9422, 472, 9, 77, "Input",ExpressionUUID->"bb5816cc-1223-48b5-aced-fba9ebcd00c4"],
Cell[440278, 9433, 345, 7, 47, "Output",ExpressionUUID->"928811f8-f949-475a-b58b-cffbbcaab41a"],
Cell[440626, 9442, 429, 9, 48, "Output",ExpressionUUID->"e0002cbd-32b7-408b-b9d7-212d3cd2c3c0"],
Cell[441058, 9453, 302, 7, 48, "Output",ExpressionUUID->"447e3fd6-fef1-4b2a-a6c5-b70819de06cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[441409, 9466, 167, 3, 59, "Subsection",ExpressionUUID->"2ebdb9ca-467a-4df5-82a1-97a6c8e4264d"],
Cell[441579, 9471, 215, 4, 39, "Text",ExpressionUUID->"6de16e4b-bba7-4fa2-8d03-c9ceb2d797bc"],
Cell[CellGroupData[{
Cell[441819, 9479, 354, 8, 32, "Input",ExpressionUUID->"3e3caef6-4fc4-4b15-91f9-741242ba7279"],
Cell[442176, 9489, 4879, 139, 89, "Output",ExpressionUUID->"9dbcc764-e36c-4ea6-8b26-5e4ca542190f"]
}, Open  ]],
Cell[447070, 9631, 263, 6, 39, "Text",ExpressionUUID->"f9df6d2d-a853-4d1d-8d29-afd0c49f9224"],
Cell[CellGroupData[{
Cell[447358, 9641, 416, 9, 32, "Input",ExpressionUUID->"5e8d40b4-8283-4c67-944b-4e40e9913712"],
Cell[447777, 9652, 2663, 58, 73, "Output",ExpressionUUID->"ab4004fb-f653-436f-86ea-3f66f6fb5c81"]
}, Open  ]],
Cell[450455, 9713, 256, 6, 39, "Text",ExpressionUUID->"c263b8a7-c8c6-41b2-a8ed-56d3cc25afd6"],
Cell[CellGroupData[{
Cell[450736, 9723, 470, 11, 32, "Input",ExpressionUUID->"3a9a2da0-e959-4f2b-9419-d8c068ef81e9"],
Cell[451209, 9736, 3128, 85, 73, "Output",ExpressionUUID->"db3130ac-99c2-4d3b-9345-29101dfd690e"]
}, Open  ]],
Cell[454352, 9824, 214, 4, 39, "Text",ExpressionUUID->"0259aba5-14f9-4345-a419-3167ddd68e15"],
Cell[CellGroupData[{
Cell[454591, 9832, 358, 8, 32, "Input",ExpressionUUID->"a7d6c196-a9b7-4e33-8ed5-58fa76f98aec"],
Cell[454952, 9842, 8085, 193, 126, "Output",ExpressionUUID->"c0d9412f-0946-42c2-a0ae-e3bc7024d175"]
}, Open  ]],
Cell[463052, 10038, 273, 6, 39, "Text",ExpressionUUID->"88cbd3b9-e0f2-46f1-ac7e-0da06423e561"],
Cell[CellGroupData[{
Cell[463350, 10048, 845, 22, 55, "Input",ExpressionUUID->"3785c557-108d-46b2-a15f-8dd203e0aaa1"],
Cell[464198, 10072, 242, 4, 44, "Output",ExpressionUUID->"1611dc43-f23c-4421-b355-d905907cf10d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464477, 10081, 805, 17, 121, "Input",ExpressionUUID->"eb96c2d9-d12e-4be5-af91-fe5bd1606297"],
Cell[465285, 10100, 252, 4, 36, "Output",ExpressionUUID->"bbceb1ed-4b7b-4d2d-bfcd-b49496e99a8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465574, 10109, 494, 11, 77, "Input",ExpressionUUID->"2a0d7115-ef10-4a7d-aa76-cdd8086a0eb5"],
Cell[466071, 10122, 1711, 31, 142, "Output",ExpressionUUID->"ca58e058-635e-48af-9617-369eadee50d8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

